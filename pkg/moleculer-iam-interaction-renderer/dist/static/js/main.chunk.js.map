{"version":3,"file":"static/js/main.chunk.js","sources":["/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/styles.css","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/app.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/hook.ts","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/image/logo.svg","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/image/screen_password.svg","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/image/screen_sent.svg","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/image/screen_verify.svg","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/navigator.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/consent.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/error.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/find_email.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/find_email.sent.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/layout.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/login.check_password.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/login.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/logout.end.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/logout.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/register.detail.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/register.end.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/register.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/reset_password.end.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/reset_password.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/reset_password.sent.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/reset_password.set.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_email.end.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_email.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_email.sent.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_phone.end.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_phone.index.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/screen/verify_phone.sent.tsx","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/service-worker.ts","webpack:///./src/styles.css?1370","/Users/dw.kim/Synced/qmit/moleculer-iam/pkg/moleculer-iam-interaction-renderer/src/styles.ts"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\\n@font-face {\\n  font-family: SegoeUI;\\n  src:\\n    local(\\\"Segoe UI Light\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff2) format(\\\"woff2\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff) format(\\\"woff\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.ttf) format(\\\"truetype\\\");\\n  font-weight: 100;\\n}\\n\\n@font-face {\\n  font-family: SegoeUI;\\n  src:\\n    local(\\\"Segoe UI Semilight\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff2) format(\\\"woff2\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff) format(\\\"woff\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.ttf) format(\\\"truetype\\\");\\n  font-weight: 200;\\n}\\n\\n@font-face {\\n  font-family: SegoeUI;\\n  src:\\n    local(\\\"Segoe UI\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff2) format(\\\"woff2\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff) format(\\\"woff\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.ttf) format(\\\"truetype\\\");\\n  font-weight: 400;\\n}\\n\\n@font-face {\\n  font-family: SegoeUI;\\n  src:\\n    local(\\\"Segoe UI Bold\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff2) format(\\\"woff2\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff) format(\\\"woff\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.ttf) format(\\\"truetype\\\");\\n  font-weight: 600;\\n}\\n\\n@font-face {\\n  font-family: SegoeUI;\\n  src:\\n    local(\\\"Segoe UI Semibold\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff2) format(\\\"woff2\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff) format(\\\"woff\\\"),\\n    url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.ttf) format(\\\"truetype\\\");\\n  font-weight: 700;\\n}\\n\\n#root {\\n  height: 100vh;\\n}\\n\\n#root > div {\\n  height: 100%;\\n  max-width: 100vw;\\n  margin: 0 auto;\\n}\\n\\n/* set small width size for non-mobile devices */\\n@media (min-width: 640px) {\\n  #root > div {\\n    width: 375px;\\n  }\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { getStateFromPath, NavigationContainer, useLinking } from \"@react-navigation/native\";\nimport { Navigator, routeConfig } from \"./navigator\";\nimport { useServerState } from \"./hook\";\nimport { ClientErrorScreen } from \"./screen/error\";\n\nconst InnerApp: React.FunctionComponent = () => {\n  // read state from URI\n  const ref = useRef();\n  const serverState = useServerState();\n  const { getInitialState } = useLinking(ref, {\n    prefixes: [window.location.origin],\n    config: routeConfig,\n    getStateFromPath: (path, options) => {\n      const state = getStateFromPath(path, options);\n      if (state && state.routes[0]) {\n        const route = state.routes[0];\n        if (serverState.error) {\n          route.name = \"error\";\n          console.error(`serverState.error`, serverState);\n        }\n        if (serverState.interaction && route.name !== serverState.interaction.name) {\n          console.warn(`serverState.interaction differs from matched route`, serverState.interaction, route);\n        }\n      }\n      return state;\n    },\n  });\n\n  const [loading, setLoading] = useState(true);\n  const [initialState, setInitialState] = useState({} as any);\n  useEffect(() => {\n    (async () => {\n      let state;\n      try {\n        state = await getInitialState();\n        setInitialState(state);\n        console.debug(\"initial state loaded from uri\", state);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [getInitialState]);\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <NavigationContainer\n      initialState={initialState}\n      ref={ref}\n    >\n      <Navigator />\n    </NavigationContainer>\n  );\n};\n\nexport class App extends React.Component {\n  state = { error: null as any, info: null as any};\n\n  componentDidCatch(error: any, info: any) {\n    this.setState({ error, info });\n    console.error(error, info);\n    // can report uncaught client error here\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ClientErrorScreen {...this.state} />;\n    }\n\n    return <InnerApp />;\n  }\n};\n","import { createContext, DependencyList, useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\n/* do async job with loading state */\nexport function useWithLoading() {\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({} as { global?: any, [key: string]: any });\n\n  const unmounted = useRef(false);\n  useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  const callWithLoading = useCallback(async (callback: () => void | Promise<void>) => {\n    if (loading) return;\n    setLoading(true);\n    setErrors({});\n    try {\n      await callback();\n    } catch (error) {\n      console.error(error);\n      setErrors({global: error.toString()});\n    } finally {\n      setTimeout(() => !unmounted.current && setLoading(false), 500);\n    }\n  }, [loading]);\n\n  const withLoading = <T extends any[]>(callback: (...args: T) => void | Promise<void>, deps: DependencyList = []) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n    return useCallback((...args: T) => callWithLoading(() => callback(...args)), [callback, ...deps]);\n  };\n\n  return {\n    withLoading,\n    loading,\n    setLoading,\n    errors,\n    setErrors,\n  };\n}\n\n\n/* read initial interaction information */\nconst __EMPTY_SERVER_STATE__ = {\n  error: {\n    error: \"unexpected_error\",\n    error_description: \"unrecognized state received from server\",\n  },\n  metadata: {},\n};\n\nexport function useServerState() {\n  const state = (window as any).__SERVER_STATE__ || __EMPTY_SERVER_STATE__;\n  state.request = async (name: string, userPayload: any = {}): Promise<any> => {\n    const actions = state.interaction && state.interaction.actions;\n    const action: {\n      url: string,\n      method: string,\n      payload?: any,\n      urlencoded?: boolean,\n    } = actions && actions[name];\n\n    if (action) {\n      // merge payload\n      const { url, urlencoded = false, method, payload } = action;\n      const mergedPayload = {...payload, ...userPayload};\n\n      // as application/x-www-form-urlencoded\n      if (urlencoded) {\n        const form = document.createElement(\"form\");\n        form.action = url;\n        form.method = method;\n        form.style.display = \"none\";\n        // tslint:disable-next-line:forin\n        for (const k in mergedPayload) {\n          const input = document.createElement(\"input\");\n          input.type = \"hidden\";\n          input.name = k;\n          input.value = mergedPayload[k];\n          form.appendChild(input);\n        }\n        document.body.appendChild(form);\n        form.submit();\n        return new Promise<any>(() => {});\n      }\n\n      // as xhr\n      return fetch(action.url, {\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\",\n        },\n        credentials: \"same-origin\",\n        method,\n        body: method !== \"GET\" ? JSON.stringify(mergedPayload) : undefined,\n      })\n        .then(res => {\n          return res.json()\n            .then(data => {\n              if (data.error) {\n                if (res.status === 422 && data.fields) {\n                  const err = data.fields.reduce((err: any, item: {field: string, message: string, type: string, actual: any}) => {\n                    err[item.field] = err[item.field] || item.message;\n                    return err;\n                  }, {});\n                  console.error(err, state);\n                  // eslint-disable-next-line no-throw-literal\n                  throw err;\n                } else {\n                  const err = { global: typeof data === \"object\" ? (data.error_description || data.error || JSON.stringify(data)) : data.toString() };\n                  console.error(err, state);\n                  // eslint-disable-next-line no-throw-literal\n                  throw err;\n                }\n              } else if (data.redirect) {\n                window.location.assign(data.redirect);\n                return new Promise(() => {});\n              } else {\n                return data;\n              }\n            });\n        }, err => {\n          console.error(err, state);\n          throw err;\n        });\n    } else {\n      const err = { global: \"Cannot call unsupported action.\" };\n      console.error(err, state);\n      // eslint-disable-next-line no-throw-literal\n      throw err;\n    }\n  };\n  return state;\n}\n\n/* manage global interaction state */\nconst clientState: any = {};\nconst setClientState = (reducer: (prevState: any) => any | any) => {\n  if (typeof reducer === \"function\") {\n    Object.assign(clientState, reducer(clientState));\n  } else {\n    Object.assign(clientState, reducer);\n  }\n};\nconst globalStateContext = createContext({globalState: clientState, setGlobalState: setClientState});\nexport const useGlobalState = () => useContext(globalStateContext);\n\n/* close screen */\nexport function useClose(tryGoBack = true) {\n  const [closed, setClosed] = useState(false);\n  const nav = useNavigation();\n  const close = useCallback(() => {\n    if (tryGoBack && nav.canGoBack()) {\n      nav.goBack();\n    } else {\n      window.close();\n      setTimeout(() => setClosed(true), 500);\n    }\n  }, [nav, tryGoBack]);\n\n  return {\n    closed, setClosed, close,\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.060b0e6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen_password.8f6c6a92.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen_sent.1ae0604c.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen_verify.465fe378.svg\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app\";\nimport * as serviceWorker from \"./service-worker\";\nimport \"./styles\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { LinkingOptions } from \"@react-navigation/native/lib/typescript/src/types\";\nimport { createStackNavigator, StackNavigationOptions } from \"@react-navigation/stack\";\n\n// error\nimport { ErrorScreen } from \"./screen/error\";\n\n// login\nimport { LoginIndexScreen } from \"./screen/login.index\";\nimport { LoginCheckPasswordScreen } from \"./screen/login.check_password\";\n\n// consent\nimport { ConsentScreen } from \"./screen/consent\";\n\n// logout\nimport { LogoutIndexScreen } from \"./screen/logout.index\";\nimport { LogoutEndScreen } from \"./screen/logout.end\";\n\n// find email\nimport { FindEmailIndexScreen } from \"./screen/find_email.index\";\nimport { FindEmailSentScreen } from \"./screen/find_email.sent\";\n\n// reset password\nimport { ResetPasswordIndexScreen } from \"./screen/reset_password.index\";\nimport { ResetPasswordSentScreen } from \"./screen/reset_password.sent\";\nimport { ResetPasswordSetScreen } from \"./screen/reset_password.set\";\nimport { ResetPasswordEndScreen } from \"./screen/reset_password.end\";\n\n// register\nimport { RegisterIndexScreen } from \"./screen/register.index\";\nimport { RegisterDetailScreen } from \"./screen/register.detail\";\nimport { RegisterEndScreen } from \"./screen/register.end\";\n\n// verify phone\nimport { VerifyPhoneIndexScreen } from \"./screen/verify_phone.index\";\nimport { VerifyPhoneSentScreen } from \"./screen/verify_phone.sent\";\nimport { VerifyPhoneEndScreen } from \"./screen/verify_phone.end\";\n\n// verify email\nimport { VerifyEmailIndexScreen } from \"./screen/verify_email.index\";\nimport { VerifyEmailSentScreen } from \"./screen/verify_email.sent\";\nimport { VerifyEmailEndScreen } from \"./screen/verify_email.end\";\n\n\nexport const routeConfig: LinkingOptions[\"config\"] = {\n  \"login\": {\n    screens: {\n      \"login.check_password\": \"interaction/login/check_password\",\n      \"login.index\": \"interaction/login\",\n    },\n  },\n  \"consent\": \"interaction/consent\",\n  \"logout\": {\n    screens: {\n      \"logout.end\": \"oidc/session/end/success\",\n      \"logout.index\": \"oidc/session/end\",\n    },\n  },\n  \"find_email\": {\n    screens: {\n      \"find_email.sent\": \"interaction/find_email/sent\",\n      \"find_email.index\": \"interaction/find_email\",\n    },\n  },\n  \"reset_password\": {\n    screens: {\n      \"reset_password.end\": \"interaction/reset_password/end\",\n      \"reset_password.set\": \"interaction/reset_password/set\",\n      \"reset_password.sent\": \"interaction/reset_password/sent\",\n      \"reset_password.index\": \"interaction/reset_password\",\n    },\n  },\n  \"register\": {\n    screens: {\n      \"register.end\": \"interaction/register/end\",\n      \"register.detail\": \"interaction/register/detail\",\n      \"register.index\": \"interaction/register\",\n    },\n  },\n  \"verify_phone\": {\n    screens: {\n      \"verify_phone.end\": \"interaction/verify_phone/end\",\n      \"verify_phone.sent\": \"interaction/verify_phone/sent\",\n      \"verify_phone.index\": \"interaction/verify_phone\",\n    },\n  },\n  \"verify_email\": {\n    screens: {\n      \"verify_email.end\": \"interaction/verify_email/end\",\n      \"verify_email.sent\": \"interaction/verify_email/sent\",\n      \"verify_email.index\": \"interaction/verify_email\",\n    },\n  },\n  \"error\": \"\",\n};\n\nconst RootStack = createStackNavigator();\nconst screenOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardStyle: {\n    backgroundColor: \"#ffffff\",\n  },\n};\n\nconst LoginStack = createStackNavigator();\nconst LoginStackScreen = () => (\n  <LoginStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <LoginStack.Screen\n      name={\"login.index\"}\n      component={LoginIndexScreen}\n    />\n    <LoginStack.Screen\n      name={\"login.check_password\"}\n      component={LoginCheckPasswordScreen}\n    />\n  </LoginStack.Navigator>\n);\n\nconst LogoutStack = createStackNavigator();\nconst LogoutStackScreen = () => (\n  <LogoutStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <LogoutStack.Screen\n      name={\"logout.index\"}\n      component={LogoutIndexScreen}\n    />\n    <LogoutStack.Screen\n      name={\"logout.end\"}\n      component={LogoutEndScreen}\n    />\n  </LogoutStack.Navigator>\n);\n\nconst FindEmailStack = createStackNavigator();\nconst FindEmailStackScreen = () => (\n  <FindEmailStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <FindEmailStack.Screen\n      name={\"find_email.index\"}\n      component={FindEmailIndexScreen}\n    />\n    <FindEmailStack.Screen\n      name={\"find_email.sent\"}\n      component={FindEmailSentScreen}\n    />\n  </FindEmailStack.Navigator>\n);\n\nconst ResetPasswordStack = createStackNavigator();\nconst ResetPasswordStackScreen = () => (\n  <ResetPasswordStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <ResetPasswordStack.Screen\n      name={\"reset_password.index\"}\n      component={ResetPasswordIndexScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.sent\"}\n      component={ResetPasswordSentScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.set\"}\n      component={ResetPasswordSetScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.end\"}\n      component={ResetPasswordEndScreen}\n    />\n  </ResetPasswordStack.Navigator>\n);\n\nconst RegisterStack = createStackNavigator();\nconst RegisterStackScreen = () => (\n  <RegisterStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <RegisterStack.Screen\n      name={\"register.index\"}\n      component={RegisterIndexScreen}\n    />\n    <RegisterStack.Screen\n      name={\"register.detail\"}\n      component={RegisterDetailScreen}\n    />\n    <RegisterStack.Screen\n      name={\"register.end\"}\n      component={RegisterEndScreen}\n    />\n  </RegisterStack.Navigator>\n);\n\nconst VerifyPhoneStack = createStackNavigator();\nconst VerifyPhoneStackScreen = () => (\n  <VerifyPhoneStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.index\"}\n      component={VerifyPhoneIndexScreen}\n    />\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.sent\"}\n      component={VerifyPhoneSentScreen}\n    />\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.end\"}\n      component={VerifyPhoneEndScreen}\n    />\n  </VerifyPhoneStack.Navigator>\n);\n\nconst VerifyEmailStack = createStackNavigator();\nconst VerifyEmailStackScreen = () => (\n  <VerifyEmailStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <VerifyEmailStack.Screen\n      name={\"verify_email.index\"}\n      component={VerifyEmailIndexScreen}\n    />\n    <VerifyEmailStack.Screen\n      name={\"verify_email.sent\"}\n      component={VerifyEmailSentScreen}\n    />\n    <VerifyEmailStack.Screen\n      name={\"verify_email.end\"}\n      component={VerifyEmailEndScreen}\n    />\n  </VerifyEmailStack.Navigator>\n);\n\nexport const Navigator = () => {\n  return (\n    <RootStack.Navigator\n      screenOptions={screenOptions}\n    >\n      <RootStack.Screen\n        name={\"error\"}\n        component={ErrorScreen}\n      />\n      <RootStack.Screen\n        name={\"consent\"}\n        component={ConsentScreen}\n      />\n      <RootStack.Screen\n        name={\"login\"}\n        component={LoginStackScreen}\n      />\n      <RootStack.Screen\n        name={\"find_email\"}\n        component={FindEmailStackScreen}\n      />\n      <RootStack.Screen\n        name={\"reset_password\"}\n        component={ResetPasswordStackScreen}\n      />\n      <RootStack.Screen\n        name={\"register\"}\n        component={RegisterStackScreen}\n      />\n      <RootStack.Screen\n        name={\"logout\"}\n        component={LogoutStackScreen}\n      />\n      <RootStack.Screen\n        name={\"verify_phone\"}\n        component={VerifyPhoneStackScreen}\n      />\n      <RootStack.Screen\n        name={\"verify_email\"}\n        component={VerifyEmailStackScreen}\n      />\n    </RootStack.Navigator>\n  );\n};\n","import React from \"react\";\nimport { Text, ThemeStyles, Link, Persona, PersonaSize } from \"../styles\";\nimport { useServerState, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport const ConsentScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, withLoading, errors, setErrors} = useWithLoading();\n  const nav = useNavigation();\n  const { interaction, request } = useServerState();\n\n  // handlers\n  const handleAccept = withLoading(() => {\n    return request(\"consent.accept\")\n      .catch((err: any) => setErrors(err));\n  });\n\n  // const handleReject = withLoading(() => {\n  //   return request(\"consent.reject\")\n  //     .catch((err: any) => setErrors(err));\n  // });\n\n  const handleChangeAccount = withLoading(() => {\n    // return request(\"consent.change_account\")\n    //   .catch((err: any) => setErrors(err));\n    return nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    });\n  });\n\n  const {user, client, consent} = (interaction.data || {}) as any;\n\n  // render\n  return (\n    <ScreenLayout\n      title={<span>Sign in to <Link href={client.client_uri} target={\"_blank\"} style={{color: ThemeStyles.palette.orange}} variant=\"xxLarge\">{client.name}</Link></span>}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleAccept,\n          loading,\n          tabIndex: 1,\n          autoFocus: true,\n        },\n        // {\n        //   text: \"Cancel\",\n        //   onClick: handleReject,\n        //   loading,\n        //   tabIndex: 2,\n        // },\n        {\n          text: \"Change account\",\n          onClick: handleChangeAccount,\n          loading,\n          tabIndex: 3,\n        },\n      ]}\n      footer={\n        <Text>\n          To continue, you need to offer {consent.scopes.new.concat(consent.scopes.accepted).join(\", \")} information.\n          Before consent this application, you could review the <Link href={client.client_uri} target={\"_blank\"}>{client.name}</Link>'s <Link href={client.policy_uri} target=\"_blank\">privacy policy</Link> and <Link\n          href={client.tos_uri} target=\"_blank\">terms of service</Link>.\n        </Text>\n      }\n      error={errors.global}\n    >\n      <Persona\n        text={user.name}\n        secondaryText={user.email}\n        size={PersonaSize.size56}\n        imageUrl={user.picture}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { useServerState, useClose } from \"../hook\";\n\nexport const ErrorScreen: React.FunctionComponent = () => {\n  const state = useServerState();\n  const error = state.error || { error: \"unexpected_server_error\", error_description: \"unrecognized state received from server\" };\n  const {closed, close} = useClose();\n  return (\n    <ScreenLayout\n      title={error.error.split(\"_\").map((w: string) => w[0].toUpperCase()+w.substr(1)).join(\" \")}\n      subtitle={error.error_description}\n      error={closed ? \"Please close the window manually.\" : undefined}\n      buttons={[\n        {\n          primary: false,\n          text: \"Close\",\n          loading: closed,\n          tabIndex: 1,\n          onClick: close,\n        },\n      ]}\n    />\n  );\n};\n\nexport const ClientErrorScreen: React.FunctionComponent<{ error: any, info: any }> = (props) => {\n  return (\n    <ScreenLayout\n      title={\"Unexpected Client Error\"}\n      subtitle={props.error.name}\n    >\n      <pre style={{fontSize: \"0.8em\", color: \"gray\", wordBreak: \"break-all\", whiteSpace: \"pre-wrap\"}}>{props.error.message}</pre>\n    </ScreenLayout>\n  );\n};\n\n","import React, { useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport const FindEmailIndexScreen: React.FunctionComponent = () => {\n  const nav = useNavigation();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  const handleCheckPhoneNumber = withLoading(() => nav.navigate(\"find_email\", {\n    screen: \"find_email.sent\",\n    params: {\n      phoneNumber,\n    },\n  }), [phoneNumber]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }));\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Find email`}\n      subtitle={`Enter your phone number`}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleCheckPhoneNumber,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 23,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Have a registered phone number? Can find the ID only if have one.\n      </Text>\n      <TextField\n        label=\"Phone number\"\n        type=\"tel\"\n        inputMode=\"tel\"\n        placeholder=\"Enter your mobile phone number\"\n        autoFocus\n        tabIndex={21}\n        value={phoneNumber}\n        errorMessage={errors.phone_number}\n        onChange={(e, v) => setPhoneNumber(v || \"\")}\n        onKeyUp={e => e.key === \"Enter\" && handleCheckPhoneNumber()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport svg from \"../image/screen_sent.svg\";\n\nexport const FindEmailSentScreen: React.FunctionComponent = () => {\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }));\n\n  const { phoneNumber = \"\" } = (useRoute() as any).params || {};\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Find email`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account email address has been sent to your mobile device.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { FontWeights, Image, Stack, Text, AnimationStyles, ButtonStyles, DefaultButton, PrimaryButton, LabelStyles } from \"../styles\";\nimport logo from \"../image/logo.svg\";\n\nexport const ScreenLayout: React.FunctionComponent<{\n  title?: string | ReactElement,\n  subtitle?: string | ReactElement,\n  buttons?: {\n    text: string,\n    autoFocus?: boolean,\n    onClick?: () => void|Promise<void>,\n    primary?: boolean,\n    loading?: boolean,\n    tabIndex?: number,\n  }[],\n  footer?: ReactElement,\n  error?: string,\n}> = (props) => {\n  const {title = \"TODO\", subtitle = null, children = null, buttons = [], error = null, footer = null} = props;\n  return (\n    <ScrollView contentContainerStyle={{marginTop: \"auto\", marginBottom: \"auto\"}}>\n        <Stack\n          horizontalAlign=\"stretch\"\n          verticalAlign=\"center\"\n          verticalFill\n          styles={{\n            root: {\n              width: \"100%\",\n              padding: \"30px\",\n            },\n          }}\n          tokens={{childrenGap: 30}}\n        >\n          <Image src={logo} styles={{root: {height: \"47px\"}}} shouldFadeIn={false}/>\n\n          <Stack tokens={{childrenGap: 5}}>\n            <Text\n              variant=\"xLargePlus\"\n              styles={{root: {fontWeight: FontWeights.regular}}}\n              children={title}\n            />\n            <Text variant=\"large\" children={subtitle}/>\n          </Stack>\n\n          <Stack tokens={{childrenGap: 15}} children={children} />\n\n          <Stack tokens={{childrenGap: 15}} verticalAlign=\"end\">\n            { error ? <Text styles={{root: {...AnimationStyles.slideDownIn20, ...(LabelStyles.fieldErrorMessage.root as any) }}} children={typeof error === \"string\" ? error : JSON.stringify(error || \"Unknown Error.\")}/> : null }\n            {buttons.map(({ primary, text, onClick, autoFocus, loading, tabIndex }, index) => {\n              const Button = primary ? PrimaryButton : DefaultButton;\n              return <Button key={index} tabIndex={tabIndex} autoFocus={autoFocus} checked={loading === true} allowDisabledFocus text={text} styles={ButtonStyles.large} onClick={loading ? undefined : onClick} />;\n            })}\n            {footer}\n          </Stack>\n        </Stack>\n    </ScrollView>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { Link, TextField, TextFieldStyles } from \"../styles\";\nimport { useGlobalState, useServerState, useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\n\nexport const LoginCheckPasswordScreen: React.FunctionComponent = () => {\n  const nav = useNavigation();\n  const { globalState } = useGlobalState();\n  const { email = \"unknown\", name = \"unknown\" } = globalState.user || {};\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n  const [password, setPassword] = useState(\"\");\n\n  const { request } = useServerState();\n  const handleCheckLoginPassword = withLoading(async () => {\n    return request(\"login.check_password\", { email, password })\n      .catch((err: any) => setErrors(err));\n  }, [email, password]);\n\n  const handleResetPassword = withLoading(() => nav.navigate(\"reset_password\", {\n    screen: \"reset_password.index\",\n    params: {\n      email,\n    }\n  }), [email]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {\n      email,\n    },\n  }), [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Hi, ${name}`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Sign in\",\n          onClick: handleCheckLoginPassword,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          tabIndex: 23,\n        },\n      ]}\n      error={errors.global}\n    >\n      <form onSubmit={(e) => { e.preventDefault(); handleCheckLoginPassword(); }}>\n        <input type=\"text\" name=\"username\" value={email} style={{display: \"none\"}} readOnly />\n        <TextField\n          label=\"Password\"\n          autoComplete=\"password\"\n          name=\"password\"\n          type=\"password\"\n          inputMode=\"text\"\n          placeholder=\"Enter your password\"\n          autoFocus\n          tabIndex={21}\n          value={password}\n          errorMessage={errors.password}\n          onChange={(e, v) => setPassword(v || \"\")}\n          onKeyUp={e => e.key === \"Enter\" && handleCheckLoginPassword()}\n          styles={TextFieldStyles.bold}\n        />\n      </form>\n      <Link tabIndex={24} onClick={handleResetPassword} variant=\"small\" style={{marginTop: \"10px\"}}>Forgot password?</Link>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\nimport { PrimaryButton, DefaultButton, Link, TextField, TextFieldStyles, ButtonStyles, Separator, Stack, ThemeStyles } from \"../styles\";\nimport { useGlobalState, useServerState, useWithLoading } from \"../hook\";\n\nexport const LoginIndexScreen: React.FunctionComponent = () => {\n  const nav = useNavigation();\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n  const [email, setEmail] = useState(((useRoute() as any).params || {}).email || \"\");\n  const { setGlobalState } = useGlobalState();\n  const { request, interaction } = useServerState();\n  const federationProviders = interaction.actions[\"login.federate\"].providers || [];\n  const [federationOptionsVisible, setFederationOptionsVisible] = useState(false);\n\n  // const handleAbort = withLoading(() => {\n  //   return request(\"login.abort\")\n  //     .catch((err: any) => setErrors(err));\n  // });\n\n  const handleCheckLoginEmail = withLoading(() => {\n    return request(\"login.check_email\", { email })\n      .then((data: any) => {\n        const { user } = data;\n        setGlobalState((s: any) => ({...s, user}));\n        nav.navigate(\"login\", {\n          screen: \"login.check_password\",\n          params: {\n            email,\n          },\n        });\n      })\n      .catch((err: any) => setErrors(err));\n  }, [email]);\n\n  useEffect(() => {\n      if (email) {\n        console.debug(\"automatically continue with\", email);\n        handleCheckLoginEmail();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  [],\n);\n\n  const handleFindEmail = withLoading(() => nav.navigate(\"find_email\", {\n    screen: \"find_email.index\",\n  }));\n\n  const handleSignUp = withLoading(() => nav.navigate(\"register\", {\n    screen: \"register.index\",\n  }));\n\n  const handleFederation = withLoading((provider: string) => {\n    return request(\"login.federate\", { provider })\n      .catch((err: any) => setErrors(err));\n  });\n\n  useEffect(() => {\n    return nav.addListener(\"blur\", () => {\n      setTimeout(() => setFederationOptionsVisible(false), 500);\n    });\n  }, [nav]);\n\n  return (\n    <ScreenLayout\n      title={\"Sign In\"}\n      subtitle={\"Enter your account\"}\n      error={errors.global}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleCheckLoginEmail,\n          loading,\n          tabIndex: 12,\n        },\n        {\n          text: \"Sign up\",\n          onClick: handleSignUp,\n          loading,\n          tabIndex: 13,\n        },\n      ]}\n      footer={\n        federationProviders.length > 0 ? (\n          <>\n            <Separator><span style={{color: ThemeStyles.palette.neutralTertiary}}>OR</span></Separator>\n            {federationOptionsVisible ? (\n              <Stack tokens={{childrenGap: 15}}>\n                {federationProviders.includes(\"kakao\") ? (\n                  <PrimaryButton\n                    onClick={() => handleFederation(\"kakao\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Kakao\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#ffdc00\", borderColor: \"#ffb700\", color: \"black\"}}\n                  />\n                ) : null}\n                {federationProviders.includes(\"facebook\") ? (\n                  <PrimaryButton\n                    onClick={() => handleFederation(\"facebook\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Facebook\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#1876f2\", color: \"white\"}}\n                  />\n                ): null}\n                {federationProviders.includes(\"google\") ? (\n                  <DefaultButton\n                    onClick={() => handleFederation(\"google\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Google\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#ffffff\", borderWidth: 1, color: \"black\"}}\n                  />\n                  /*\n                    <Link\n                      onClick={() => handleFederation(\"google\")}\n                      variant=\"small\"\n                      style={{marginTop: \"10px\", color: ThemeStyles.palette.neutralTertiary}}\n                    >Login with Google</Link>\n                 */\n                ) : null}\n              </Stack>\n            ) : (\n              <Link style={{color: ThemeStyles.palette.neutralTertiary}} onClick={() => setFederationOptionsVisible(true)}>Find more login options?</Link>\n            )}\n          </>\n        ) : undefined\n      }\n    >\n      <form onSubmit={(e) => { e.preventDefault(); handleCheckLoginEmail(); }}>\n        <TextField\n          label=\"Email\"\n          name=\"username\"\n          type=\"text\"\n          inputMode=\"email\"\n          autoComplete=\"username\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          autoFocus\n          placeholder=\"Enter your email\"\n          tabIndex={11}\n          value={email}\n          errorMessage={errors.email}\n          onChange={(e, v) => setEmail(v || \"\")}\n          onKeyUp={e => e.key === \"Enter\" && handleCheckLoginEmail()}\n          styles={TextFieldStyles.bold}\n        />\n      </form>\n      <Link onClick={handleFindEmail} tabIndex={14} variant=\"small\" style={{marginTop: \"10px\"}}>Forgot email?</Link>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useClose, useServerState } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const LogoutEndScreen: React.FunctionComponent = () => {\n  // states\n  const { closed, close } = useClose(false);\n  const { interaction } = useServerState();\n  const { user } = interaction.data;\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Signed out`}\n      subtitle={user ? user.email : undefined}\n      buttons={[\n        {\n          primary: false,\n          text: \"Close\",\n          onClick: close,\n          loading: closed,\n          tabIndex: 21,\n        },\n      ]}\n      error={closed ? \"Please close the window manually.\" : undefined}\n    >\n      <Text>\n        {user ? \"All your sessions are still alive.\" : \"All your sessions have been destroyed.\"}\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text, Link } from \"../styles\";\nimport { useClose, useServerState, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const LogoutIndexScreen: React.FunctionComponent = () => {\n  // states\n  const { loading, withLoading, errors, setErrors } = useWithLoading();\n  const { request, interaction } = useServerState();\n  const { user, client } = interaction.data;\n\n  const handleSignOutAll = withLoading(() => {\n    return request(\"logout.confirm\")\n      .catch((err: any) => setErrors(err));\n  });\n  const handleJustRedirect = withLoading(() => {\n    return request(\"logout.redirect\")\n      .catch((err: any) => setErrors(err));\n  });\n\n  // render\n  return (\n    <ScreenLayout\n      title={client ? `Signed out` : `Sign out`}\n      subtitle={user.email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleJustRedirect,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          primary: false,\n          text: \"Sign out all\",\n          onClick: handleSignOutAll,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        {client ? (<span>Signed out from <Link href={client.client_uri} target={\"_blank\"}>{client.name}</Link> successfully.<br /></span>) : null }\n        Do you want to destroy all the sessions?\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField, Stack, DatePicker, DatePickerStyles, Dropdown, DropdownStyles, Label, LabelStyles } from \"../styles\";\nimport { useServerState, useWithLoading } from \"../hook\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport moment from \"moment\";\n\nexport const RegisterDetailScreen: React.FunctionComponent = () => {\n  const nav = useNavigation();\n  const [payload, setPayload] = useState({\n    phone_number: \"\",\n    birthdate: \"\",\n    gender: \"\",\n  });\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const handlePayloadSubmit = withLoading(async () => {\n    // TODO ...\n    if (payload.phone_number) {\n      nav.navigate(\"verify_phone\", {\n        screen: \"verify_phone.index\",\n        params: {\n          phoneNumber: payload.phone_number,\n          callback: \"register\",\n        },\n      });\n    } else {\n      nav.navigate(\"register\", {\n        screen: \"register.end\",\n        params: {\n          email: \"to@do.com\",\n        },\n      });\n    }\n  }, [payload]);\n  const handleCancel = withLoading(() => nav.navigate(\"register\", {\n    screen: \"register.index\",\n    params: {},\n  }), [nav]);\n\n  const {email} = { email: \"to@do.com\" };\n\n  // render\n  return (\n    <ScreenLayout\n      title={\"Sign up\"}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 64,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 65,\n        },\n      ]}\n      error={errors.global}\n    >\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handlePayloadSubmit();\n      }}>\n        <Stack tokens={{childrenGap: 15}}>\n          <Text>It is highly recommended to enter the mobile phone number to make it easier to find the your lost account.</Text>\n          <TextField\n            label=\"Phone (optional)\"\n            type=\"text\"\n            inputMode=\"tel\"\n            placeholder=\"Enter your mobile phone number\"\n            autoFocus\n            tabIndex={61}\n            value={payload.phone_number}\n            errorMessage={errors.phone_number}\n            onChange={(e, v) => setPayload(p => ({...p, phone_number: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n\n          <DatePicker\n            label=\"Birthdate\"\n            placeholder=\"Select your birthdate\"\n            tabIndex={62}\n            allowTextInput\n            value={payload.birthdate ? moment(payload.birthdate, \"YYYY-MM-DD\").toDate() : undefined}\n            onSelectDate={(date) => date && setPayload(p => ({...p, birthdate: moment(date).format(\"YYYY-MM-DD\")}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            formatDate={date => date ? moment(date).format(\"YYYY-MM-DD\") : \"\"}\n            initialPickerDate={moment().subtract(20, \"y\").toDate()}\n            highlightCurrentMonth\n            highlightSelectedMonth\n            showGoToToday={false}\n            parseDateFromString={str => {\n              const d = moment(str, \"YYYY-MM-DD\");\n              return d.isValid() ? d.toDate() : null;\n            }}\n            styles={DatePickerStyles.bold as any}\n          />\n          {errors.birthdate ? <Label styles={LabelStyles.fieldErrorMessage}>{errors.birthdate}</Label> : null}\n\n          <Dropdown\n            label=\"Gender\"\n            selectedKey={payload.gender || undefined}\n            onChange={(e, v) => v && setPayload(p => ({...p, gender: v.key as any}))}\n            placeholder=\"Select your gender\"\n            tabIndex={63}\n            options={[\n              {key: \"male\", text: \"Male\"},\n              {key: \"female\", text: \"Female\"},\n              {key: \"other\", text: \"Other\"},\n            ]}\n            errorMessage={errors.gender}\n            styles={DropdownStyles.bold}\n          />\n        </Stack>\n      </form>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const RegisterEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleContinue = withLoading(() => {\n    // ... login\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    })\n  });\n\n  // render\n  return (\n    <ScreenLayout\n      title={\"Signed up\"}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleContinue,\n          loading,\n          autoFocus: true,\n          tabIndex: 1,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>Congratulations! The account has been registered. This email account can be used to sign in to multiple services. So don't forget it please. <span role=\"img\" aria-label=\"smile\">🙂</span></Text>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField, Stack, Link } from \"../styles\";\nimport { useServerState, useWithLoading } from \"../hook\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport const RegisterIndexScreen: React.FunctionComponent = () => {\n  const nav = useNavigation();\n  const [payload, setPayload] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const handlePayloadSubmit = withLoading(async () => {\n    // TODO ...\n    nav.navigate(\"register\", {\n      screen: \"register.detail\",\n      params: {},\n    });\n  }, [nav, payload]);\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }), [nav]);\n\n  const { metadata } = useServerState();\n\n  // render\n  return (\n    <ScreenLayout\n      title={\"Sign up\"}\n      subtitle={\"Create account\"}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 55,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 56,\n        },\n      ]}\n      error={errors.global}\n      footer={\n        <>\n          <Text>When you sign up as a member, you agree to the <Link href={metadata.op_tos_uri} target=\"_blank\">terms of service</Link> and the <Link href={metadata.op_policy_uri} target=\"_blank\">privacy policy</Link>.</Text>\n        </>\n      }\n    >\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handlePayloadSubmit();\n      }}>\n        <Stack tokens={{childrenGap: 15}}>\n          <TextField\n            label=\"Name\"\n            type=\"text\"\n            inputMode=\"text\"\n            placeholder=\"Enter your name\"\n            autoFocus\n            tabIndex={51}\n            value={payload.name}\n            errorMessage={errors.name}\n            onChange={(e, v) => setPayload(p => ({...p, name: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Email\"\n            type=\"text\"\n            inputMode=\"email\"\n            placeholder=\"Enter your email\"\n            autoComplete=\"username\"\n            tabIndex={52}\n            value={payload.email}\n            errorMessage={errors.email}\n            onChange={(e, v) => setPayload(p => ({...p, email: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Password\"\n            type={passwordVisible ? \"text\" : \"password\"}\n            inputMode=\"text\"\n            autoComplete=\"password\"\n            placeholder=\"Enter your password\"\n            iconProps={{iconName: passwordVisible ? \"redEye\" : \"hide\", style: {cursor: \"pointer\"}, onClick: () => setPasswordVisible(!passwordVisible)}}\n            tabIndex={53}\n            value={payload.password}\n            errorMessage={errors.password}\n            onChange={(e, v) => setPayload(p => ({...p, password: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Confirm\"\n            type=\"password\"\n            inputMode=\"text\"\n            autoComplete=\"password\"\n            placeholder=\"Confirm your password\"\n            tabIndex={54}\n            value={payload.password_confirmation}\n            errorMessage={errors.password_confirmation}\n            onChange={(e, v) => setPayload(p => ({...p, password_confirmation: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n        </Stack>\n      </form>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ResetPasswordEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    })\n  );\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Password reset`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 21,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account credential has been updated successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_password.svg\";\n\nexport const ResetPasswordIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleSend = withLoading(async () => {\n    // TODO: ..\n    nav.navigate(\"reset_password\", {\n      screen: \"reset_password.sent\",\n      params: {email, ttl: 3600},\n    });\n  }, [nav, email]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }), [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 31,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 32,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with a link will be sent to help you to reset password.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport svg from \"../image/screen_sent.svg\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ResetPasswordSentScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const {email = \"\", ttl = 0 } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: { email },\n  }), [nav, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 41,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        You could check the email to set a new password within {Math.floor(ttl/60)} minutes.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Stack, Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ResetPasswordSetScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\" } = (useRoute() as any).params || {};\n  const [payload, setPayload] = useState({\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  // handlers\n  const nav = useNavigation();\n  const handlePayloadSubmit = withLoading(() => {\n    nav.navigate(\"reset_password\", {\n      screen: \"reset_password.end\",\n      params: { email },\n    });\n  }, [nav, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 43,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Set a new password for your account.\n      </Text>\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        inputMode=\"text\"\n        placeholder=\"Enter new password\"\n        autoFocus\n        tabIndex={41}\n        value={payload.password}\n        errorMessage={errors.password}\n        onChange={(e, v) => setPayload(p => ({...p, password: v!}))}\n        onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n        styles={TextFieldStyles.bold}\n      />\n      <TextField\n        label=\"Confirm\"\n        type=\"password\"\n        inputMode=\"text\"\n        autoComplete=\"password\"\n        placeholder=\"Confirm your password\"\n        tabIndex={42}\n        value={payload.password_confirmation}\n        errorMessage={errors.password_confirmation}\n        onChange={(e, v) => setPayload(p => ({...p, password_confirmation: v!}))}\n        onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyEmailEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    })\n  , [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Email verified`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account email address has been verified successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_verify.svg\";\n\nexport const VerifyEmailIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\", callback = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleSend = withLoading(() => {\n    // TODO: ..\n    nav.navigate(\"verify_email\", {\n      screen: \"verify_email.sent\",\n      params: { email, ttl: 1800, callback },\n    });\n  }, [nav, email, callback]);\n\n  const handleCancel = withLoading(() => {\n    callback === \"register\" ? nav.navigate(\"register\", {\n      screen: \"register.detail\",\n      params: {},\n    }) : nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    });\n  }, [nav, callback, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify email`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with a verification link will be sent to verify the email address.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyEmailSentScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { email = \"\", ttl = 0, callback = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() => {\n    if (callback === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.detail\",\n        params: {},\n      });\n    } else {\n      nav.navigate(\"login\", {\n        screen: \"login.index\",\n        params: {\n          email,\n        },\n      });\n    }\n  }, [nav, email, callback]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify email`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 21,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with the verification link has been sent.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyPhoneEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { phoneNumber = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    })\n  );\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Phone number verified`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account phone number has been verified successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_verify.svg\";\n\nexport const VerifyPhoneIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { phoneNumber = \"\", callback = \"\" } = (useRoute() as any).params || {};\n\n  // handlers\n  const nav = useNavigation();\n  const handleSend = withLoading(() => {\n    // TODO: ..\n    nav.navigate(\"verify_phone\", {\n      screen: \"verify_phone.sent\",\n      params: { phoneNumber, ttl: 500, callback },\n    });\n  }, [nav, phoneNumber, callback]);\n\n  const handleCancel = withLoading(() => {\n    callback === \"register\" ? nav.navigate(\"register\", {\n      screen: \"register.detail\",\n      params: {},\n    }) : nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    });\n  }, [nav, callback]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify phone number`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        A text message with a verification code will be sent to verify the phone number.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useWithLoading } from \"../hook\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyPhoneSentScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const [code, setCode] = useState(\"\");\n\n  // props\n  const { phoneNumber = \"\", ttl = 0, callback = \"\" } = (useRoute() as any).params || {};\n  const [remainingSeconds, setRemainingSeconds] = useState(ttl as number);\n\n  useEffect(() => {\n    const timer = setInterval(() => setRemainingSeconds(s => Math.max(0, s - 1)), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // handlers\n  const nav = useNavigation();\n  const handleVerify = withLoading(() => {\n    if (callback === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.end\",\n        params: {\n          email: \"tod@do.com\",\n        },\n      });\n    } else {\n      nav.navigate(\"verify_phone\", {\n        screen: \"verify_phone.end\",\n        params: {\n          phoneNumber,\n        },\n      });\n    }\n  }, [nav, phoneNumber, callback]);\n  const handleResend = withLoading(() => {\n    setRemainingSeconds(500);\n    setCode(\"\");\n  });\n  const handleCancel = withLoading(() => {\n    if (callback === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.detail\",\n        params: {},\n      });\n    } else {\n      nav.navigate(\"login\", {\n        screen: \"login.index\",\n        params: {},\n      });\n    }\n  }, [nav, phoneNumber, callback]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify phone number`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleVerify,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Resend\",\n          onClick: handleResend,\n          loading,\n          tabIndex: 23,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 24,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Enter the received 6-digit verification code.\n      </Text>\n      <TextField\n        label=\"Verification code\"\n        type=\"tel\"\n        inputMode=\"tel\"\n        placeholder=\"Enter the verification code\"\n        autoFocus\n        tabIndex={21}\n        value={code}\n        errorMessage={errors.code}\n        description={`${(Math.floor(remainingSeconds / 60)).toString().padStart(2, \"0\")}:${(remainingSeconds % 60).toString().padStart(2, \"0\")}`}\n        onChange={(e, v) => setCode(v || \"\")}\n        onKeyUp={e => e.key === \"Enter\" && handleVerify()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { FontSizes, ITextFieldStyles, IStyleFunctionOrObject, FontWeights, IDatePickerStyles, IButtonStyles, IDropdownStyles, ILabelStyles } from \"office-ui-fabric-react/lib\";\nimport { ITextFieldStyleProps } from \"office-ui-fabric-react/lib/components/TextField/TextField.types\";\nimport { IDatePickerStyleProps } from \"office-ui-fabric-react/lib/components/DatePicker/DatePicker.types\";\nimport { IDropdownStyleProps } from \"office-ui-fabric-react/lib/components/Dropdown/Dropdown.types\";\nimport { loadTheme, getTheme } from \"office-ui-fabric-react/lib\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport \"./styles.css\";\n\nexport * from \"office-ui-fabric-react/lib\";\n\n// Inject some global styles\n// mergeStyles({\n//   selectors: {\n//     \":global(body), :global(html), :global(#root)\": {\n//       margin: 0,\n//       padding: 0,\n//       height: \"100vh\",\n//     },\n//   },\n// });\n\nloadTheme({\n  palette: {\n    themePrimary: \"#2a44ec\",\n    themeLighterAlt: \"#f6f7fe\",\n    themeLighter: \"#dbdffc\",\n    themeLight: \"#bcc4fa\",\n    themeTertiary: \"#7c8cf4\",\n    themeSecondary: \"#435aef\",\n    themeDarkAlt: \"#263ed5\",\n    themeDark: \"#2034b4\",\n    themeDarker: \"#182685\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#bab8b7\",\n    neutralSecondary: \"#a3a2a0\",\n    neutralPrimaryAlt: \"#8d8b8a\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#605e5d\",\n    black: \"#494847\",\n    white: \"#ffffff\",\n    orange: \"#ffa420\",\n  },\n});\n\ninitializeIcons();\n\nexport const ThemeStyles = getTheme();\n\nexport const TextFieldStyles: { [key: string]: IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles> } = {\n  bold: {\n    fieldGroup: {\n      height: \"50px\",\n    },\n    field: {\n      fontSize: FontSizes.large,\n      padding: \"0 15px\",\n      selectors: {\n        \"&::placeholder\": {\n          fontSize: FontSizes.large,\n        },\n      },\n    },\n    icon: {\n      lineHeight: \"1.5em\",\n      fontSize: \"1.5em\",\n      padding: \"0.1em 0.5em\",\n      pointerEvents: \"auto\",\n      userSelect: \"none\",\n    },\n  },\n};\n\nexport const DropdownStyles: {[key: string]: IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>} = {\n  bold: {\n    dropdown: {\n      selectors: {\n        \".ms-Dropdown-title\": {\n          height: \"48px\",\n          lineHeight: \"48px\",\n          fontSize: FontSizes.large,\n          padding: \"0 15px\",\n        },\n        \".ms-Dropdown-caretDownWrapper\": {\n          lineHeight: \"1.5em\",\n          fontSize: \"1.5em\",\n          padding: \"0.2em 0.5em\",\n        },\n      },\n    },\n  },\n};\n\nexport const DatePickerStyles: {[key: string]: IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles>} = {\n  bold: {\n    root: {\n      outline: \"none\",\n    },\n    textField: {\n      selectors: {\n        \".ms-TextField-fieldGroup\": {\n          height: \"50px\",\n        },\n        \"input\": {\n          padding: \"0 15px\",\n          height: \"48px\",\n          fontSize: FontSizes.large,\n        },\n        \"input::placeholder\": {\n          fontSize: FontSizes.large,\n        },\n      },\n    },\n    icon: {\n      lineHeight: \"1.5em\",\n      fontSize: \"1.5em\",\n      padding: \"0.5em\",\n    },\n  },\n};\n\nexport const LabelStyles: { [key: string]: ILabelStyles } = {\n  fieldErrorMessage: {\n    root: {\n      ...ThemeStyles.fonts.small,\n      color: ThemeStyles.palette.redDark,\n      paddingBottom: 0,\n      marginTop: \"0 !important\",\n    },\n  },\n};\n\nexport const ButtonStyles: { [key: string]: IButtonStyles } = {\n  large: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n    },\n  },\n  largeThin: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n    },\n    label: {fontWeight: 500},\n  },\n  largeFull: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n      width: \"100%\",\n    },\n  },\n};\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAhBA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AASA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAfA;AACA;;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAUA;AAAA;AAAA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA7BA;AACA;AADA;AAAA;AAmCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEA;AAyEA;AAAA;AAAA;AACA;AA1EA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8EA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;;;;;;;;;;;ACrKA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA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;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AADA;AA4BA;AAEA;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAbA;AADA;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AADA;AADA;AADA;;AAoBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AATA;AADA;AAeA;AACA;AACA;AACA;AAHA;AAnBA;AADA;;AA4BA;AACA;AACA;AAEA;AACA;AACA;AAJA;AADA;AADA;;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAhBA;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}