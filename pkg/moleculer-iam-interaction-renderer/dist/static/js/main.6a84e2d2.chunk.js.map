{"version":3,"sources":["../state.js","app/state.tsx","screen/error.tsx","hook.ts","image/screen_sent.svg","image/screen_verify.svg","styles.ts","index.tsx","screen/layout.tsx","service-worker.ts","app/index.tsx","app/nav.state.tsx","app/nav.tsx","image/logo.svg","screen/login.index.tsx","screen/login.check_password.tsx","screen/consent.tsx","screen/logout.index.tsx","screen/logout.end.tsx","screen/find_email.index.tsx","screen/find_email.verify.tsx","screen/reset_password.index.tsx","image/screen_password.svg","screen/reset_password.sent.tsx","screen/reset_password.set.tsx","screen/reset_password.end.tsx","screen/register.index.tsx","screen/register.detail.tsx","screen/register.end.tsx","screen/verify_phone.index.tsx","screen/verify_phone.verify.tsx","screen/verify_phone.end.tsx","screen/verify_email.index.tsx","screen/verify_email.verify.tsx","screen/verify_email.end.tsx","screen/loading.tsx"],"names":["__importStar","this","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","cachedAppOptions","_","require","getAppOptions","window","Error","defaultsDeep","__APP_OPTIONS__","prefix","logo","uri","align","login","federation_options_visible","getInitialAppState","__APP_STATE__","name","error","error_description","dev","AppStateContext","createContext","AppStateContainer","state","app","dispatch","userPayload","actions","action","err","global","console","url","urlencoded","method","payload","mergedPayload","form","document","createElement","style","display","input","type","appendChild","body","submit","Promise","fetch","headers","credentials","JSON","stringify","undefined","then","res","json","data","status","fields","reduce","e","item","field","message","toString","session","newAppState","setState","prev","debug","ClientErrorScreen","Provider","props","children","info","React","Component","useAppState","useClose","closed","close","ScreenLayout","title","split","map","w","toUpperCase","substr","join","subtitle","buttons","primary","text","loading","tabIndex","onClick","fontSize","color","wordBreak","whiteSpace","useContext","useState","setLoading","errors","setErrors","unmounted","useRef","useEffect","current","callWithLoading","useCallback","callback","setTimeout","withLoading","deps","args","tryGoBack","setClosed","useNavigation","nav","canGoBack","goBack","route","useRoute","params","navigate","includeLocaleQuery","locale","module","loadTheme","theme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","orange","initializeIcons","ThemeStyles","getTheme","TextFieldStyles","bold","fieldGroup","height","FontSizes","large","padding","selectors","icon","lineHeight","pointerEvents","userSelect","DropdownStyles","dropdown","DatePickerStyles","root","outline","textField","LabelStyles","fieldErrorMessage","fonts","small","redDark","paddingBottom","marginTop","ButtonStyles","mediumPlus","fontWeight","FontWeights","light","largeThin","label","largeFull","width","ReactDOM","render","App","getElementById","serviceWorker","unregister","options","footer","ScrollView","contentContainerStyle","marginBottom","Stack","horizontalAlign","verticalAlign","verticalFill","styles","tokens","childrenGap","Image","src","textAlign","image","maxWidth","maxHeight","shouldFadeIn","Text","variant","regular","AnimationStyles","slideDownIn20","index","hidden","autoFocus","Button","PrimaryButton","DefaultButton","key","checked","allowDisabledFocus","config","navigator","URL","process","location","href","origin","addEventListener","swUrl","isLocalhost","response","contentType","get","indexOf","ready","registration","reload","registerValidSW","catch","log","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","AppNavigationContainer","appState","ref","deepLinking","useLinking","prefixes","routeConfig","getStateFromPath","path","navState","routes","getMatchedRoute","warn","initialState","setInitialState","getInitialState","finally","LoadingScreen","NavigationContainer","AppNavigator","startsWith","screens","RootStack","createStackNavigator","screenOptions","headerShown","cardStyle","backgroundColor","LoginStack","LoginStackScreen","Navigator","Screen","component","LoginIndexScreen","LoginCheckPasswordScreen","LogoutStack","LogoutStackScreen","LogoutIndexScreen","LogoutEndScreen","FindEmailStack","FindEmailStackScreen","FindEmailIndexScreen","FindEmailVerifyScreen","ResetPasswordStack","ResetPasswordStackScreen","ResetPasswordIndexScreen","ResetPasswordSentScreen","ResetPasswordSetScreen","ResetPasswordEndScreen","RegisterStack","RegisterStackScreen","RegisterIndexScreen","RegisterDetailScreen","RegisterEndScreen","VerifyPhoneStack","VerifyPhoneStackScreen","VerifyPhoneIndexScreen","VerifyPhoneVerifyScreen","VerifyPhoneEndScreen","VerifyEmailStack","VerifyEmailStackScreen","VerifyEmailIndexScreen","VerifyEmailVerifyScreen","VerifyEmailEndScreen","ErrorScreen","ConsentScreen","useWithLoading","email","setEmail","federationOptionsVisible","setFederationOptionsVisible","federationProviders","metadata","availableFederationProviders","handleCheckLoginEmail","screen","handleFindEmail","handleSignUp","handleFederation","provider","addListener","length","Separator","includes","flex","borderColor","borderWidth","Link","onSubmit","preventDefault","TextField","inputMode","autoComplete","autoCapitalize","autoCorrect","placeholder","errorMessage","onChange","v","onKeyUp","password","setPassword","user","picture","handleCheckLoginPassword","handleResetPassword","handleCancel","readOnly","handleAccept","handleChangeAccount","client","consent","client_uri","target","scopes","new","concat","accepted","policy_uri","tos_uri","Persona","secondaryText","size","PersonaSize","size56","imageUrl","handleSignOutAll","handleJustRedirect","phoneNumber","setPhoneNumber","handleCheckPhoneNumber","phone_number","handleDone","svg","minHeight","handleSend","ttl","Math","floor","password_confirmation","setPayload","handlePayloadSubmit","p","stored","scope","claims","passwordVisible","setPasswordVisible","discovery","op_tos_uri","op_policy_uri","iconProps","iconName","cursor","birthdate","gender","phoneNumberIsRequired","mandatoryScopes","country","newState","storedClaims","DatePicker","allowTextInput","toDate","onSelectDate","date","format","formatDate","initialPickerDate","subtract","highlightCurrentMonth","highlightSelectedMonth","showGoToToday","parseDateFromString","str","d","isValid","Label","Dropdown","selectedKey","handleContinue","role","aria-label","code","setCode","remainingSeconds","setRemainingSeconds","timer","setInterval","s","max","clearInterval","handleVerify","handleResend","description","padStart","SpinnerSize","otherProps","Spinner"],"mappings":"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","file":"static/js/main.6a84e2d2.chunk.js","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __importStar(require(\"lodash\"));\n// parse app options from html document\nvar cachedAppOptions;\nfunction getAppOptions() {\n    if (cachedAppOptions) {\n        return cachedAppOptions;\n    }\n    if (typeof window === \"undefined\") {\n        throw new Error(\"cannot call getAppOptions from server-side\");\n    }\n    else {\n        return cachedAppOptions = _.defaultsDeep(window.__APP_OPTIONS__ || {}, {\n            prefix: \"/op\",\n            logo: {\n                uri: null,\n                align: \"left\",\n            },\n            login: {\n                federation_options_visible: false,\n            },\n        });\n    }\n}\nexports.getAppOptions = getAppOptions;\n// parse initial app state from html document\nfunction getInitialAppState() {\n    if (typeof window === \"undefined\") {\n        throw new Error(\"cannot call getInitialAppState from server-side\");\n    }\n    else {\n        return (window.__APP_STATE__ || {\n            name: \"error\",\n            error: {\n                error: \"unexpected_error\",\n                error_description: \"unrecognized state received from server\",\n            },\n        });\n    }\n}\nexports.getInitialAppState = getInitialAppState;\n","import { InteractionResponse, InteractionState } from \"moleculer-iam\";\nimport React, { createContext } from \"react\";\nimport { ClientErrorScreen } from \"../screen/error\";\nimport { getAppOptions, getInitialAppState } from \"../../state\";\n\nconst { dev } = getAppOptions();\n\n// read server state and create endpoint request helper\nexport const AppStateContext = createContext<[InteractionState, AppStateContainer[\"dispatch\"]]>([] as any);\n\nexport class AppStateContainer extends React.Component {\n  state = {\n    error: null as any,\n    app: getInitialAppState(),\n  };\n\n  render() {\n    const { error, app } = this.state;\n\n    if (error) {\n      return <ClientErrorScreen error={error} />;\n    }\n\n    return (\n      <AppStateContext.Provider value={[app, this.dispatch]}>\n        {this.props.children}\n      </AppStateContext.Provider>\n    )\n  }\n\n  // wrap with error boundary\n  componentDidCatch(error: any, info: any) {\n    this.setState(prev => ({ ...prev, error }));\n    console.error(error, info);\n    // can report uncaught client error here\n  }\n\n  // call xhr request and update app state\n  dispatch = async (name: string, userPayload: any = {}): Promise<InteractionState> => {\n    const actions = this.state.app.actions;\n    const action = actions && actions[name];\n\n    if (!action) {\n      const err = {global: \"Cannot call unsupported action.\"};\n      console.error(err, this.state);\n      // eslint-disable-next-line no-throw-literal\n      throw err;\n    }\n\n    // merge user payload with hint payload\n    const {url, urlencoded = false, method, payload} = action;\n    const mergedPayload = {...payload, ...userPayload};\n\n    // as application/x-www-form-urlencoded\n    if (urlencoded) {\n      const form = document.createElement(\"form\");\n      form.action = url;\n      form.method = method;\n      form.style.display = \"none\";\n      // tslint:disable-next-line:forin\n      for (const k in mergedPayload) {\n        const input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = k;\n        input.value = mergedPayload[k];\n        form.appendChild(input);\n      }\n      document.body.appendChild(form);\n      form.submit();\n      return new Promise<any>(() => {\n      });\n    }\n\n    // as xhr\n    return fetch(action.url, {\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      credentials: \"same-origin\",\n      method,\n      body: method !== \"GET\" ? JSON.stringify(mergedPayload) : undefined,\n    })\n      .then(res => {\n        return res.json()\n          .then((data: InteractionResponse): InteractionState => {\n            if (data.error) { // XHR error response\n              // organize field error descriptor for form components on validation error\n              if (res.status === 422 && data.error.fields) {\n                const err = data.error.fields.reduce((e: any, item: { field: string, message: string, type: string, actual: any }) => {\n                  e[item.field] = e[item.field] || item.message;\n                  return e;\n                }, {});\n                console.error(err, data);\n                // eslint-disable-next-line no-throw-literal\n                throw err;\n              } else {\n                const err = {global: typeof data.error === \"object\" ? (data.error.error_description || data.error.error || JSON.stringify(data.error)) : (data.error as any).toString()};\n                console.error(err, data);\n                // eslint-disable-next-line no-throw-literal\n                throw err;\n              }\n\n            } else if (data.session) { // got session state update\n              const newAppState = {...this.state.app, session: data.session!};\n              this.setState(prev => ({...prev, app: newAppState}));\n              dev && console.debug(\"app state updated\", newAppState);\n              return newAppState;\n\n            } else if (data.state) {\n              console.error(\"interaction state response received from XHR\", data);\n\n            } else {\n              console.error(\"unrecognized response structure\", data);\n            }\n\n            return this.state.app;\n          });\n      });\n  };\n}\n","import React from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { useAppState, useClose } from \"../hook\";\n\nexport const ErrorScreen: React.FunctionComponent = () => {\n  const [state, dispatch] = useAppState();\n  const error = state.error || { error: \"unexpected_server_error\", error_description: \"unrecognized state received from server.\" };\n  const {closed, close} = useClose();\n  return (\n    <ScreenLayout\n      title={error.error.split(\"_\").map((w: string) => w[0].toUpperCase()+w.substr(1)).join(\" \")}\n      subtitle={error.error_description}\n      error={closed ? \"Please close the window manually.\" : undefined}\n      buttons={[\n        {\n          primary: false,\n          text: \"Close\",\n          loading: closed,\n          tabIndex: 1,\n          onClick: close,\n        },\n      ]}\n    />\n  );\n};\n\nexport const ClientErrorScreen: React.FunctionComponent<{ error: any }> = (props) => {\n  return (\n    <ScreenLayout\n      title={\"Unexpected Client Error\"}\n      subtitle={props.error.name}\n    >\n      <pre style={{fontSize: \"0.8em\", color: \"gray\", wordBreak: \"break-all\", whiteSpace: \"pre-wrap\"}}>{props.error.message}</pre>\n    </ScreenLayout>\n  );\n};\n\n","import { DependencyList, useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { useNavigation as useOriginalNavigation, useRoute } from \"@react-navigation/native\";\nimport { AppStateContext } from \"./app/state\";\nexport { getAppOptions } from \"../state\";\n\n// get global app state\nexport function useAppState() {\n  return useContext(AppStateContext);\n}\n\n// do async job with loading state\nexport function useWithLoading() {\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({} as { global?: any, [key: string]: any });\n\n  const unmounted = useRef(false);\n  useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  const callWithLoading = useCallback(async (callback: () => void | Promise<void>) => {\n    if (loading) return;\n    setLoading(true);\n    setErrors({});\n    try {\n      await callback();\n    } catch (error) {\n      console.error(error);\n      setErrors({global: error.toString()});\n    } finally {\n      setTimeout(() => !unmounted.current && setLoading(false), 500);\n    }\n  }, [loading]);\n\n  const withLoading = <T extends any[]>(callback: (...args: T) => any | Promise<any>, deps: DependencyList = []) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n    return useCallback((...args: T) => callWithLoading(() => callback(...args)), [callback, ...deps]);\n  };\n\n  return {\n    withLoading,\n    loading,\n    setLoading,\n    errors,\n    setErrors,\n  };\n}\n\n// enhance navigation instance methods\nexport function useNavigation() {\n  // set undefined params as empty object\n  const route = useRoute() as ReturnType<typeof useRoute> & { params: {[key: string]: any} };\n  if (!route.params) route.params = {};\n\n  // override nav methods to include locale query for navigation\n  const nav = useOriginalNavigation();\n  const navigate = nav.navigate;\n  nav.navigate = (...args: any[]) => {\n    includeLocaleQuery(args, route);\n    return navigate(...args as any);\n  };\n\n  return { nav, route };\n}\n\nfunction includeLocaleQuery(args: any, route: any) {\n  if (route.params.locale) {\n    if (!args[1] || !args[1].params || !args[1].params.locale) {\n      if (!args[1]) {\n        args[1] = {};\n      }\n      if (!args[1].params) {\n        args[1].params = {};\n      }\n      args[1].params.locale = route.params.locale;\n    }\n  }\n}\n\n// close screen\nexport function useClose(tryGoBack = true) {\n  const [closed, setClosed] = useState(false);\n  const { nav } = useNavigation();\n  const close = useCallback(() => {\n    if (tryGoBack && nav.canGoBack()) {\n      nav.goBack();\n    } else {\n      window.close();\n      setTimeout(() => setClosed(true), 500);\n    }\n  }, [nav, tryGoBack]);\n\n  return {\n    closed, setClosed, close,\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/screen_sent.1ae0604c.svg\";","module.exports = __webpack_public_path__ + \"static/media/screen_verify.465fe378.svg\";","import * as _ from \"lodash\";\nimport { loadTheme, getTheme, FontSizes, ITextFieldStyles, IStyleFunctionOrObject, FontWeights, IDatePickerStyles, IButtonStyles, IDropdownStyles, ILabelStyles, IPartialTheme } from \"office-ui-fabric-react/lib\";\nimport { ITextFieldStyleProps } from \"office-ui-fabric-react/lib/components/TextField/TextField.types\";\nimport { IDatePickerStyleProps } from \"office-ui-fabric-react/lib/components/DatePicker/DatePicker.types\";\nimport { IDropdownStyleProps } from \"office-ui-fabric-react/lib/components/Dropdown/Dropdown.types\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { getAppOptions } from \"../state\";\nimport \"./styles.css\";\n\nexport * from \"office-ui-fabric-react/lib\";\n\n// Inject some global styles\n// mergeStyles({\n//   selectors: {\n//     \":global(body), :global(html), :global(#root)\": {\n//       margin: 0,\n//       padding: 0,\n//       height: \"100vh\",\n//     },\n//   },\n// });\n\nloadTheme(_.defaultsDeep(getAppOptions().theme || {}, {\n  palette: {\n    themePrimary: \"#2a44ec\",\n    themeLighterAlt: \"#f6f7fe\",\n    themeLighter: \"#dbdffc\",\n    themeLight: \"#bcc4fa\",\n    themeTertiary: \"#7c8cf4\",\n    themeSecondary: \"#435aef\",\n    themeDarkAlt: \"#263ed5\",\n    themeDark: \"#2034b4\",\n    themeDarker: \"#182685\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#bab8b7\",\n    neutralSecondary: \"#a3a2a0\",\n    neutralPrimaryAlt: \"#8d8b8a\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#605e5d\",\n    black: \"#494847\",\n    white: \"#ffffff\",\n    orange: \"#ffa420\",\n  },\n} as IPartialTheme));\n\ninitializeIcons();\n\nexport const ThemeStyles = getTheme();\n\nexport const TextFieldStyles: { [key: string]: IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles> } = {\n  bold: {\n    fieldGroup: {\n      height: \"50px\",\n    },\n    field: {\n      fontSize: FontSizes.large,\n      padding: \"0 15px\",\n      selectors: {\n        \"&::placeholder\": {\n          fontSize: FontSizes.large,\n        },\n      },\n    },\n    icon: {\n      lineHeight: \"1.5em\",\n      fontSize: \"1.5em\",\n      padding: \"0.1em 0.5em\",\n      pointerEvents: \"auto\",\n      userSelect: \"none\",\n    },\n  },\n};\n\nexport const DropdownStyles: {[key: string]: IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>} = {\n  bold: {\n    dropdown: {\n      selectors: {\n        \".ms-Dropdown-title\": {\n          height: \"48px\",\n          lineHeight: \"48px\",\n          fontSize: FontSizes.large,\n          padding: \"0 15px\",\n        },\n        \".ms-Dropdown-caretDownWrapper\": {\n          lineHeight: \"1.5em\",\n          fontSize: \"1.5em\",\n          padding: \"0.2em 0.5em\",\n        },\n      },\n    },\n  },\n};\n\nexport const DatePickerStyles: {[key: string]: IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles>} = {\n  bold: {\n    root: {\n      outline: \"none\",\n    },\n    textField: {\n      selectors: {\n        \".ms-TextField-fieldGroup\": {\n          height: \"50px\",\n        },\n        \"input\": {\n          padding: \"0 15px\",\n          height: \"48px\",\n          fontSize: FontSizes.large,\n        },\n        \"input::placeholder\": {\n          fontSize: FontSizes.large,\n        },\n      },\n    },\n    icon: {\n      lineHeight: \"1.5em\",\n      fontSize: \"1.5em\",\n      padding: \"0.5em\",\n    },\n  },\n};\n\nexport const LabelStyles: { [key: string]: ILabelStyles } = {\n  fieldErrorMessage: {\n    root: {\n      ...ThemeStyles.fonts.small,\n      color: ThemeStyles.palette.redDark,\n      paddingBottom: 0,\n      marginTop: \"0 !important\",\n    },\n  },\n};\n\nexport const ButtonStyles: { [key: string]: IButtonStyles } = {\n  large: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n    },\n  },\n  largeThin: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n    },\n    label: {fontWeight: 500},\n  },\n  largeFull: {\n    root: {\n      height: \"50px\",\n      fontSize: FontSizes.mediumPlus,\n      fontWeight: FontWeights.light,\n      width: \"100%\",\n    },\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./service-worker\";\nimport { App } from \"./app\";\nimport \"./styles\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { ReactElement } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { getAppOptions } from \"../hook\";\nimport { FontWeights, Image, Stack, Text, AnimationStyles, ButtonStyles, DefaultButton, PrimaryButton, LabelStyles } from \"../styles\";\nimport logo from \"../image/logo.svg\";\n\nexport const ScreenLayout: React.FunctionComponent<{\n  title?: string | ReactElement,\n  subtitle?: string | ReactElement,\n  buttons?: {\n    text: string,\n    autoFocus?: boolean,\n    onClick?: () => void|Promise<void>,\n    primary?: boolean,\n    loading?: boolean,\n    tabIndex?: number,\n    hidden?: boolean,\n  }[],\n  footer?: ReactElement,\n  error?: string,\n}> = (props) => {\n  const options = getAppOptions();\n  const {title = \"TODO\", subtitle = null, children = null, buttons = [], error = null, footer = null} = props;\n  return (\n    <ScrollView contentContainerStyle={{marginTop: \"auto\", marginBottom: \"auto\"}}>\n        <Stack\n          horizontalAlign=\"stretch\"\n          verticalAlign=\"center\"\n          verticalFill\n          styles={{\n            root: {\n              width: \"100%\",\n              padding: \"30px\",\n            },\n          }}\n          tokens={{childrenGap: 30}}\n        >\n          <Image src={options.logo.uri || logo} styles={{root: {height: \"47px\", textAlign: options.logo.align}, image: {maxWidth: \"100%\", maxHeight: \"100%\", display: \"inline-block\"}}} shouldFadeIn={false}/>\n\n          <Stack tokens={{childrenGap: 5}}>\n            <Text\n              variant=\"xLargePlus\"\n              styles={{root: {fontWeight: FontWeights.regular}}}\n              children={title}\n            />\n            <Text variant=\"large\" children={subtitle}/>\n          </Stack>\n\n          <Stack tokens={{childrenGap: 15}} children={children} />\n\n          <Stack tokens={{childrenGap: 15}} verticalAlign=\"end\">\n            { error ? <Text styles={{root: {...AnimationStyles.slideDownIn20, ...(LabelStyles.fieldErrorMessage.root as any) }}} children={typeof error === \"string\" ? error : JSON.stringify(error || \"Unknown Error.\")}/> : null }\n            {buttons.map(({ hidden, primary, text, onClick, autoFocus, loading, tabIndex }, index) => {\n              if (hidden === true) return null;\n              const Button = primary ? PrimaryButton : DefaultButton;\n              return <Button key={index} tabIndex={tabIndex} autoFocus={autoFocus} checked={loading === true} allowDisabledFocus text={text} styles={ButtonStyles.large} onClick={loading ? undefined : onClick} />;\n            })}\n            {footer}\n          </Stack>\n        </Stack>\n    </ScrollView>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { AppNavigationContainer } from \"./nav.state\";\nimport { AppStateContainer } from \"./state\";\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <AppStateContainer>\n      <AppNavigationContainer />\n    </AppStateContainer>\n  )\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { getStateFromPath as getNavStateFromPath, NavigationContainerRef } from \"@react-navigation/core\";\nimport { NavigationContainer, NavigationState, Route, useLinking } from \"@react-navigation/native\";\nimport { AppNavigator, routeConfig } from \"./nav\";\nimport { useAppState, getAppOptions } from \"../hook\";\nimport { LoadingScreen } from \"../screen/loading\";\n\nconst { dev } = getAppOptions();\n\nexport const AppNavigationContainer: React.FunctionComponent = ({ children }) => {\n  const [appState] = useAppState();\n\n  // link nav state with URL\n  const ref = useRef<NavigationContainerRef>();\n  const deepLinking = useLinking(ref, {\n    prefixes: [window.location.origin],\n    config: routeConfig,\n    getStateFromPath: useCallback((path, options) => {\n      const navState = getNavStateFromPath(path, options);\n      if (navState) {\n        // show error route on server error\n        if (appState.error) {\n          navState.routes[0].name = \"error\";\n          console.error(`appState.error`, appState);\n        }\n\n        // warn unmatched interaction page\n        if (appState.name) {\n          const route = getMatchedRoute(navState);\n          if (route && route.name !== appState.name) {\n            console.warn(`appState.interaction differs from matched route`, appState.name, route);\n          }\n        }\n      }\n      dev && console.debug(\"get nav state from URL\", navState);\n      return navState;\n    }, [appState]),\n  });\n\n  // load initial nav state\n  const [initialState, setInitialState] = useState(null as any);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    deepLinking\n      .getInitialState()\n      .then(nav => setInitialState(nav), err => console.error(err))\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <NavigationContainer\n      initialState={initialState}\n      ref={ref}\n    >\n      <AppNavigator loading={loading} />\n    </NavigationContainer>\n  )\n}\n\nfunction getMatchedRoute(state: Partial<NavigationState>): Route<string> & {state?: Partial<NavigationState>} | undefined {\n  const route = state.routes && state.routes[0];\n  if (!route) return;\n  if (route.state) {\n    return getMatchedRoute(route.state);\n  }\n  return route;\n}\n","import React from \"react\";\nimport { LinkingOptions } from \"@react-navigation/native/lib/typescript/src/types\";\nimport { createStackNavigator, StackNavigationOptions } from \"@react-navigation/stack\";\nimport { getAppOptions } from \"../hook\";\n\n// error\nimport { ErrorScreen } from \"../screen/error\";\n// import { LoadingScreen } from \"../screen/loading\";\n\n// login\nimport { LoginIndexScreen } from \"../screen/login.index\";\nimport { LoginCheckPasswordScreen } from \"../screen/login.check_password\";\n\n// consent\nimport { ConsentScreen } from \"../screen/consent\";\n\n// logout\nimport { LogoutIndexScreen } from \"../screen/logout.index\";\nimport { LogoutEndScreen } from \"../screen/logout.end\";\n\n// find email\nimport { FindEmailIndexScreen } from \"../screen/find_email.index\";\nimport { FindEmailVerifyScreen } from \"../screen/find_email.verify\";\n\n// reset password\nimport { ResetPasswordIndexScreen } from \"../screen/reset_password.index\";\nimport { ResetPasswordSentScreen } from \"../screen/reset_password.sent\";\nimport { ResetPasswordSetScreen } from \"../screen/reset_password.set\";\nimport { ResetPasswordEndScreen } from \"../screen/reset_password.end\";\n\n// register\nimport { RegisterIndexScreen } from \"../screen/register.index\";\nimport { RegisterDetailScreen } from \"../screen/register.detail\";\nimport { RegisterEndScreen } from \"../screen/register.end\";\n\n// verify phone\nimport { VerifyPhoneIndexScreen } from \"../screen/verify_phone.index\";\nimport { VerifyPhoneVerifyScreen } from \"../screen/verify_phone.verify\";\nimport { VerifyPhoneEndScreen } from \"../screen/verify_phone.end\";\n\n// verify email\nimport { VerifyEmailIndexScreen } from \"../screen/verify_email.index\";\nimport { VerifyEmailVerifyScreen } from \"../screen/verify_email.verify\";\nimport { VerifyEmailEndScreen } from \"../screen/verify_email.end\";\n\n\nlet prefix = getAppOptions().prefix;\nif (prefix.startsWith(\"/\")) prefix = prefix.substr(1);\n\nexport const routeConfig: LinkingOptions[\"config\"] = {\n  \"login\": {\n    screens: {\n      \"login.check_password\": `${prefix}/login/check_password`,\n      \"login.index\": `${prefix}/login`,\n    },\n  },\n  \"consent\": `${prefix}/consent`,\n  \"logout\": {\n    screens: {\n      \"logout.end\": `${prefix}/session/end/success`,\n      \"logout.index\": `${prefix}/session/end`,\n    },\n  },\n  \"find_email\": {\n    screens: {\n      \"find_email.verify\": `${prefix}/find_email/verify`,\n      \"find_email.index\": `${prefix}/find_email`,\n    },\n  },\n  \"reset_password\": {\n    screens: {\n      \"reset_password.end\": `${prefix}/reset_password/end`,\n      \"reset_password.set\": `${prefix}/reset_password/set`,\n      \"reset_password.sent\": `${prefix}/reset_password/sent`,\n      \"reset_password.index\": `${prefix}/reset_password`,\n    },\n  },\n  \"register\": {\n    screens: {\n      \"register.end\": `${prefix}/register/end`,\n      \"register.detail\": `${prefix}/register/detail`,\n      \"register.index\": `${prefix}/register`,\n    },\n  },\n  \"verify_phone\": {\n    screens: {\n      \"verify_phone.end\": `${prefix}/verify_phone/end`,\n      \"verify_phone.verify\": `${prefix}/verify_phone/verify`,\n      \"verify_phone.index\": `${prefix}/verify_phone`,\n    },\n  },\n  \"verify_email\": {\n    screens: {\n      \"verify_email.end\": `${prefix}/verify_email/end`,\n      \"verify_email.verify\": `${prefix}/verify_email/verify`,\n      \"verify_email.index\": `${prefix}/verify_email`,\n    },\n  },\n  \"error\": \"\",\n};\n\nconst RootStack = createStackNavigator();\nconst screenOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardStyle: {\n    backgroundColor: \"#ffffff\",\n  },\n};\n\nconst LoginStack = createStackNavigator();\nconst LoginStackScreen = () => (\n  <LoginStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <LoginStack.Screen\n      name={\"login.index\"}\n      component={LoginIndexScreen}\n    />\n    <LoginStack.Screen\n      name={\"login.check_password\"}\n      component={LoginCheckPasswordScreen}\n    />\n  </LoginStack.Navigator>\n);\n\nconst LogoutStack = createStackNavigator();\nconst LogoutStackScreen = () => (\n  <LogoutStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <LogoutStack.Screen\n      name={\"logout.index\"}\n      component={LogoutIndexScreen}\n    />\n    <LogoutStack.Screen\n      name={\"logout.end\"}\n      component={LogoutEndScreen}\n    />\n  </LogoutStack.Navigator>\n);\n\nconst FindEmailStack = createStackNavigator();\nconst FindEmailStackScreen = () => (\n  <FindEmailStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <FindEmailStack.Screen\n      name={\"find_email.index\"}\n      component={FindEmailIndexScreen}\n    />\n    <FindEmailStack.Screen\n      name={\"find_email.verify\"}\n      component={FindEmailVerifyScreen}\n    />\n  </FindEmailStack.Navigator>\n);\n\nconst ResetPasswordStack = createStackNavigator();\nconst ResetPasswordStackScreen = () => (\n  <ResetPasswordStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <ResetPasswordStack.Screen\n      name={\"reset_password.index\"}\n      component={ResetPasswordIndexScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.sent\"}\n      component={ResetPasswordSentScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.set\"}\n      component={ResetPasswordSetScreen}\n    />\n    <ResetPasswordStack.Screen\n      name={\"reset_password.end\"}\n      component={ResetPasswordEndScreen}\n    />\n  </ResetPasswordStack.Navigator>\n);\n\nconst RegisterStack = createStackNavigator();\nconst RegisterStackScreen = () => (\n  <RegisterStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <RegisterStack.Screen\n      name={\"register.index\"}\n      component={RegisterIndexScreen}\n    />\n    <RegisterStack.Screen\n      name={\"register.detail\"}\n      component={RegisterDetailScreen}\n    />\n    <RegisterStack.Screen\n      name={\"register.end\"}\n      component={RegisterEndScreen}\n    />\n  </RegisterStack.Navigator>\n);\n\nconst VerifyPhoneStack = createStackNavigator();\nconst VerifyPhoneStackScreen = () => (\n  <VerifyPhoneStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.index\"}\n      component={VerifyPhoneIndexScreen}\n    />\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.verify\"}\n      component={VerifyPhoneVerifyScreen}\n    />\n    <VerifyPhoneStack.Screen\n      name={\"verify_phone.end\"}\n      component={VerifyPhoneEndScreen}\n    />\n  </VerifyPhoneStack.Navigator>\n);\n\nconst VerifyEmailStack = createStackNavigator();\nconst VerifyEmailStackScreen = () => (\n  <VerifyEmailStack.Navigator\n    screenOptions={screenOptions}\n  >\n    <VerifyEmailStack.Screen\n      name={\"verify_email.index\"}\n      component={VerifyEmailIndexScreen}\n    />\n    <VerifyEmailStack.Screen\n      name={\"verify_email.verify\"}\n      component={VerifyEmailVerifyScreen}\n    />\n    <VerifyEmailStack.Screen\n      name={\"verify_email.end\"}\n      component={VerifyEmailEndScreen}\n    />\n  </VerifyEmailStack.Navigator>\n);\n\nexport const AppNavigator: React.FunctionComponent<{loading: boolean}> = ({ loading }) => {\n  if (loading) {\n    return null;\n    // return <LoadingScreen />;\n  }\n\n  return (\n    <RootStack.Navigator\n      screenOptions={screenOptions}\n    >\n      <RootStack.Screen\n        name={\"error\"}\n        component={ErrorScreen}\n      />\n      <RootStack.Screen\n        name={\"consent\"}\n        component={ConsentScreen}\n      />\n      <RootStack.Screen\n        name={\"login\"}\n        component={LoginStackScreen}\n      />\n      <RootStack.Screen\n        name={\"find_email\"}\n        component={FindEmailStackScreen}\n      />\n      <RootStack.Screen\n        name={\"reset_password\"}\n        component={ResetPasswordStackScreen}\n      />\n      <RootStack.Screen\n        name={\"register\"}\n        component={RegisterStackScreen}\n      />\n      <RootStack.Screen\n        name={\"logout\"}\n        component={LogoutStackScreen}\n      />\n      <RootStack.Screen\n        name={\"verify_phone\"}\n        component={VerifyPhoneStackScreen}\n      />\n      <RootStack.Screen\n        name={\"verify_email\"}\n        component={VerifyEmailStackScreen}\n      />\n    </RootStack.Navigator>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.060b0e6c.svg\";","import React, { useEffect, useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { PrimaryButton, DefaultButton, Link, TextField, TextFieldStyles, ButtonStyles, Separator, Stack, ThemeStyles } from \"../styles\";\nimport { useNavigation, getAppOptions, useAppState, useWithLoading } from \"../hook\";\n\nexport const LoginIndexScreen: React.FunctionComponent = () => {\n  const { nav, route } = useNavigation();\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n  const [ email, setEmail ] = useState(route.params.email || \"\");\n  const [state, dispatch] = useAppState();\n  const options = getAppOptions();\n  const [federationOptionsVisible, setFederationOptionsVisible] = useState(options.login.federation_options_visible === true);\n  const federationProviders = state.metadata.availableFederationProviders;\n\n  // const handleAbort = withLoading(() => {\n  //   return dispatch(\"login.abort\")\n  //     .catch((err: any) => setErrors(err));\n  // });\n\n  const handleCheckLoginEmail = withLoading(() => {\n    return dispatch(\"login.check_email\", { email })\n      .then(() => {\n        nav.navigate(\"login\", {\n          screen: \"login.check_password\",\n          params: {\n            email,\n          },\n        });\n      })\n      .catch((err: any) => setErrors(err));\n  }, [email]);\n\n  useEffect(() => {\n      if (email) {\n        console.debug(\"automatically continue with\", email);\n        handleCheckLoginEmail();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  [],\n);\n\n  const handleFindEmail = withLoading(() => nav.navigate(\"find_email\", {\n    screen: \"find_email.index\",\n  }));\n\n  const handleSignUp = withLoading(() => nav.navigate(\"register\", {\n    screen: \"register.index\",\n  }));\n\n  const handleFederation = withLoading((provider: string) => {\n    return dispatch(\"login.federate\", { provider })\n      .catch((err: any) => setErrors(err));\n  });\n\n  useEffect(() => {\n    return nav.addListener(\"blur\", () => {\n      setTimeout(() => setFederationOptionsVisible(false), 500);\n    });\n  }, [nav]);\n\n  return (\n    <ScreenLayout\n      title={\"Sign In\"}\n      subtitle={\"Enter your account\"}\n      error={errors.global}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleCheckLoginEmail,\n          loading,\n          tabIndex: 12,\n        },\n        {\n          text: \"Sign up\",\n          onClick: handleSignUp,\n          loading,\n          tabIndex: 13,\n        },\n      ]}\n      footer={\n        federationProviders.length > 0 ? (\n          <>\n            <Separator><span style={{color: ThemeStyles.palette.neutralTertiary}}>OR</span></Separator>\n            {federationOptionsVisible ? (\n              <Stack tokens={{childrenGap: 15}}>\n                {federationProviders.includes(\"kakao\") ? (\n                  <PrimaryButton\n                    onClick={() => handleFederation(\"kakao\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Kakao\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#ffdc00\", borderColor: \"#ffb700\", color: \"black\"}}\n                  />\n                ) : null}\n                {federationProviders.includes(\"facebook\") ? (\n                  <PrimaryButton\n                    onClick={() => handleFederation(\"facebook\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Facebook\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#1876f2\", color: \"white\"}}\n                  />\n                ): null}\n                {federationProviders.includes(\"google\") ? (\n                  <DefaultButton\n                    onClick={() => handleFederation(\"google\")}\n                    styles={ButtonStyles.largeThin}\n                    text={\"Login with Google\"}\n                    style={{flex: \"1 1 auto\", backgroundColor: \"#ffffff\", borderWidth: 1, color: \"black\"}}\n                  />\n                  /*\n                    <Link\n                      onClick={() => handleFederation(\"google\")}\n                      variant=\"small\"\n                      style={{marginTop: \"10px\", color: ThemeStyles.palette.neutralTertiary}}\n                    >Login with Google</Link>\n                 */\n                ) : null}\n              </Stack>\n            ) : (\n              <Link style={{color: ThemeStyles.palette.neutralTertiary}} onClick={() => setFederationOptionsVisible(true)}>Find more login options?</Link>\n            )}\n          </>\n        ) : undefined\n      }\n    >\n      <form onSubmit={(e) => { e.preventDefault(); handleCheckLoginEmail(); }}>\n        <TextField\n          label=\"Email\"\n          name=\"username\"\n          type=\"text\"\n          inputMode=\"email\"\n          autoComplete=\"username\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          autoFocus\n          placeholder=\"Enter your email\"\n          tabIndex={11}\n          value={email}\n          errorMessage={errors.email}\n          onChange={(e, v) => setEmail(v || \"\")}\n          onKeyUp={e => e.key === \"Enter\" && handleCheckLoginEmail()}\n          styles={TextFieldStyles.bold}\n        />\n      </form>\n      <Link onClick={handleFindEmail} tabIndex={14} variant=\"small\" style={{marginTop: \"10px\"}}>Forgot email?</Link>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { Link, TextField, TextFieldStyles } from \"../styles\";\nimport { useAppState, useNavigation, useWithLoading } from \"../hook\";\n\nexport const LoginCheckPasswordScreen: React.FunctionComponent = () => {\n  // state\n  const [password, setPassword] = useState(\"\");\n  const [state, dispatch] = useAppState();\n  const { email, name, picture } = state.session.login.user;\n\n  // handlers\n  const { nav } = useNavigation();\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n\n  const handleCheckLoginPassword = withLoading(async () => {\n    return dispatch(\"login.check_password\", { email, password })\n      .catch((err: any) => setErrors(err));\n  }, [email, password]);\n\n  const handleResetPassword = withLoading(() => nav.navigate(\"reset_password\", {\n    screen: \"reset_password.index\",\n    params: {\n      email,\n    }\n  }), [email]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {\n      email,\n    },\n  }), [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Hi, ${name}`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Sign in\",\n          onClick: handleCheckLoginPassword,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          tabIndex: 23,\n        },\n      ]}\n      error={errors.global}\n    >\n      <form onSubmit={(e) => { e.preventDefault(); handleCheckLoginPassword(); }}>\n        <input type=\"text\" name=\"username\" value={email} style={{display: \"none\"}} readOnly />\n        <TextField\n          label=\"Password\"\n          autoComplete=\"password\"\n          name=\"password\"\n          type=\"password\"\n          inputMode=\"text\"\n          placeholder=\"Enter your password\"\n          autoFocus\n          tabIndex={21}\n          value={password}\n          errorMessage={errors.password}\n          onChange={(e, v) => setPassword(v || \"\")}\n          onKeyUp={e => e.key === \"Enter\" && handleCheckLoginPassword()}\n          styles={TextFieldStyles.bold}\n        />\n      </form>\n      <Link tabIndex={24} onClick={handleResetPassword} variant=\"small\" style={{marginTop: \"10px\"}}>Forgot password?</Link>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text, ThemeStyles, Link, Persona, PersonaSize } from \"../styles\";\nimport { useAppState, useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ConsentScreen: React.FunctionComponent = () => {\n  // states\n  const { loading, withLoading, errors, setErrors } = useWithLoading();\n  const { nav } = useNavigation();\n  const [state, dispatch] = useAppState();\n\n  // handlers\n  const handleAccept = withLoading(() => {\n    return dispatch(\"consent.accept\")\n      .catch((err: any) => setErrors(err));\n  });\n\n  // const handleReject = withLoading(() => {\n  //   return request(\"consent.reject\")\n  //     .catch((err: any) => setErrors(err));\n  // });\n\n  const handleChangeAccount = withLoading(() => {\n    // return request(\"consent.change_account\")\n    //   .catch((err: any) => setErrors(err));\n    return nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    });\n  });\n\n  const user = state.metadata.user!;\n  const client = state.metadata.client!;\n  const consent = state.session.consent;\n\n  // render\n  return (\n    <ScreenLayout\n      title={<span>Sign in to <Link href={client.client_uri} target={\"_blank\"} style={{color: ThemeStyles.palette.orange}} variant=\"xxLarge\">{client.name}</Link></span>}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleAccept,\n          loading,\n          tabIndex: 1,\n          autoFocus: true,\n        },\n        // {\n        //   text: \"Cancel\",\n        //   onClick: handleReject,\n        //   loading,\n        //   tabIndex: 2,\n        // },\n        {\n          text: \"Change account\",\n          onClick: handleChangeAccount,\n          loading,\n          tabIndex: 3,\n        },\n      ]}\n      footer={\n        <Text>\n          To continue, you need to offer {consent.scopes.new.concat(consent.scopes.accepted).join(\", \")} information.\n          Before consent this application, you could review the <Link href={client.client_uri} target={\"_blank\"}>{client.name}</Link>'s <Link href={client.policy_uri} target=\"_blank\">privacy policy</Link> and <Link\n          href={client.tos_uri} target=\"_blank\">terms of service</Link>.\n        </Text>\n      }\n      error={errors.global}\n    >\n      <Persona\n        text={user.name}\n        secondaryText={user.email}\n        size={PersonaSize.size56}\n        imageUrl={user.picture}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text, Link } from \"../styles\";\nimport { useAppState, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const LogoutIndexScreen: React.FunctionComponent = () => {\n  // states\n  const { loading, withLoading, errors, setErrors } = useWithLoading();\n  const [state, dispatch] = useAppState();\n  const user = state.metadata.user!;\n  const client = state.metadata.client;\n\n  const handleSignOutAll = withLoading(() => {\n    return dispatch(\"logout.confirm\")\n      .catch((err: any) => setErrors(err));\n  });\n  const handleJustRedirect = withLoading(() => {\n    return dispatch(\"logout.redirect\")\n      .catch((err: any) => setErrors(err));\n  });\n\n  // render\n  return (\n    <ScreenLayout\n      title={client ? `Signed out` : `Sign out`}\n      subtitle={user.email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleJustRedirect,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          primary: false,\n          text: \"Sign out all\",\n          onClick: handleSignOutAll,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        {client ? (<span>Signed out from <Link href={client.client_uri} target={\"_blank\"}>{client.name}</Link> successfully.<br /></span>) : null }\n        Do you want to destroy all the sessions?\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useClose, useAppState } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const LogoutEndScreen: React.FunctionComponent = () => {\n  // states\n  const { closed, close } = useClose(false);\n  const [state] = useAppState();\n  const user = state.metadata.user;\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Signed out`}\n      subtitle={user ? user.email : undefined}\n      buttons={[\n        {\n          primary: false,\n          text: \"Close\",\n          onClick: close,\n          loading: closed,\n          tabIndex: 21,\n        },\n      ]}\n      error={closed ? \"Please close the window manually.\" : undefined}\n    >\n      <Text>\n        {user ? \"All your sessions are still alive.\" : \"All your sessions have been destroyed.\"}\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField } from \"../styles\";\nimport { useAppState, useWithLoading, useNavigation } from \"../hook\";\n\nexport const FindEmailIndexScreen: React.FunctionComponent = () => {\n  const { nav, route } = useNavigation();\n  const [phoneNumber, setPhoneNumber] = useState(route.params.phoneNumber || \"\");\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n  const [state, dispatch] = useAppState();\n\n  const handleCheckPhoneNumber = withLoading(() => {\n    dispatch(\"find_email.check_phone\")\n      .then((data: any) => {\n        console.log(data);\n        nav.navigate(\"find_email\", {\n          screen: \"find_email.verify\",\n          params: {\n            phoneNumber,\n          },\n        });\n      })\n      .catch((err: any) => setErrors(err))\n  }, [phoneNumber, state]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }));\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Find email`}\n      subtitle={`Enter your phone number`}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleCheckPhoneNumber,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 23,\n          hidden: state.name === \"find_email\",\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Have a registered phone number? Can find the ID only if have one.\n      </Text>\n      <TextField\n        label=\"Phone number\"\n        type=\"tel\"\n        inputMode=\"tel\"\n        placeholder=\"Enter your mobile phone number\"\n        autoFocus\n        tabIndex={21}\n        value={phoneNumber}\n        errorMessage={errors.phone_number}\n        onChange={(e, v) => setPhoneNumber(v || \"\")}\n        onKeyUp={e => e.key === \"Enter\" && handleCheckPhoneNumber()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport svg from \"../image/screen_sent.svg\";\n\nexport const FindEmailVerifyScreen: React.FunctionComponent = () => {\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // handlers\n  const { nav, route } = useNavigation();\n  const handleDone = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }));\n\n  const { phoneNumber = \"\" } = route.params;\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Find email`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account email address has been sent to your mobile device.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_password.svg\";\n\nexport const ResetPasswordIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  // props\n  const { nav, route } = useNavigation();\n  const { email = \"\" } = route.params;\n\n  // handlers\n  const handleSend = withLoading(async () => {\n    // TODO: ..\n    nav.navigate(\"reset_password\", {\n      screen: \"reset_password.sent\",\n      params: {email, ttl: 3600},\n    });\n  }, [nav, email]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }), [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 31,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 32,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with a link will be sent to help you to reset password.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/screen_password.8f6c6a92.svg\";","import React, { useEffect } from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useNavigation, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_sent.svg\";\n\nexport const ResetPasswordSentScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const {email = \"\", ttl = 0 } = route.params;\n\n  // handlers\n  const handleDone = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: { email },\n  }), [nav, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 41,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        You could check the email to set a new password within {Math.floor(ttl/60)} minutes.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useNavigation, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ResetPasswordSetScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { email = \"\" } = route.params;\n  const [payload, setPayload] = useState({\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  // handlers\n  const handlePayloadSubmit = withLoading(() => {\n    nav.navigate(\"reset_password\", {\n      screen: \"reset_password.end\",\n      params: { email },\n    });\n  }, [nav, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Reset password`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 43,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Set a new password for your account.\n      </Text>\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        inputMode=\"text\"\n        placeholder=\"Enter new password\"\n        autoFocus\n        tabIndex={41}\n        value={payload.password}\n        errorMessage={errors.password}\n        onChange={(e, v) => setPayload(p => ({...p, password: v!}))}\n        onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n        styles={TextFieldStyles.bold}\n      />\n      <TextField\n        label=\"Confirm\"\n        type=\"password\"\n        inputMode=\"text\"\n        autoComplete=\"password\"\n        placeholder=\"Confirm your password\"\n        tabIndex={42}\n        value={payload.password_confirmation}\n        errorMessage={errors.password_confirmation}\n        onChange={(e, v) => setPayload(p => ({...p, password_confirmation: v!}))}\n        onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const ResetPasswordEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { email = \"\" } = route.params;\n\n  // handlers\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    })\n  );\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Password reset`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 21,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account credential has been updated successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField, Stack, Link } from \"../styles\";\nimport { useNavigation, useAppState, useWithLoading } from \"../hook\";\n\nexport const RegisterIndexScreen: React.FunctionComponent = () => {\n  const { nav } = useNavigation();\n  const [payload, setPayload] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n  const [state, dispatch] = useAppState();\n\n  // skip if claims already saved\n  useEffect(() => {\n    const stored = state.session.register;\n\n    if (stored && stored.credentials && stored.scope && stored.scope.includes(\"email\") && stored.scope.includes(\"profile\")) {\n      const { name, email } = stored.claims;\n      const { password, password_confirmation } = stored.credentials;\n      setPayload({\n        name,\n        email,\n        password,\n        password_confirmation,\n      });\n\n      nav.navigate(\"register\", {\n        screen: \"register.detail\",\n        params: {},\n      });\n    }\n  }, []);\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  const handlePayloadSubmit = withLoading(async () => {\n    const { name, email, password, password_confirmation } = payload;\n    return dispatch(\"register.validate\", {\n      claims: {\n        name,\n        email,\n      },\n      credentials: {\n        password,\n        password_confirmation,\n      },\n      scope: [\"email\", \"profile\"],\n    })\n      .then(() => {\n        nav.navigate(\"register\", {\n          screen: \"register.detail\",\n          params: {},\n        });\n      })\n      .catch((err: any) => setErrors(err));\n  }, [nav, payload]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"login\", {\n    screen: \"login.index\",\n    params: {},\n  }), [nav]);\n\n  // render\n  const discovery = state.metadata.discovery;\n  return (\n    <ScreenLayout\n      title={\"Sign up\"}\n      subtitle={\"Create account\"}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 55,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          hidden: state.name === \"register\",\n          tabIndex: 56,\n        },\n      ]}\n      error={errors.global}\n      footer={\n        <>\n          <Text>When you sign up as a member, you agree to the <Link href={discovery.op_tos_uri!} target=\"_blank\">terms of service</Link> and the <Link href={discovery.op_policy_uri!} target=\"_blank\">privacy policy</Link>.</Text>\n        </>\n      }\n    >\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handlePayloadSubmit();\n      }}>\n        <Stack tokens={{childrenGap: 15}}>\n          <TextField\n            label=\"Name\"\n            type=\"text\"\n            inputMode=\"text\"\n            placeholder=\"Enter your name\"\n            autoFocus\n            tabIndex={51}\n            value={payload.name}\n            errorMessage={errors.name}\n            onChange={(e, v) => setPayload(p => ({...p, name: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Email\"\n            type=\"text\"\n            inputMode=\"email\"\n            placeholder=\"Enter your email\"\n            autoComplete=\"username\"\n            tabIndex={52}\n            value={payload.email}\n            errorMessage={errors.email}\n            onChange={(e, v) => setPayload(p => ({...p, email: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Password\"\n            type={passwordVisible ? \"text\" : \"password\"}\n            inputMode=\"text\"\n            autoComplete=\"password\"\n            placeholder=\"Enter your password\"\n            iconProps={{iconName: passwordVisible ? \"redEye\" : \"hide\", style: {cursor: \"pointer\"}, onClick: () => setPasswordVisible(!passwordVisible)}}\n            tabIndex={53}\n            value={payload.password}\n            errorMessage={errors.password}\n            onChange={(e, v) => setPayload(p => ({...p, password: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n          <TextField\n            label=\"Confirm\"\n            type=\"password\"\n            inputMode=\"text\"\n            autoComplete=\"password\"\n            placeholder=\"Confirm your password\"\n            tabIndex={54}\n            value={payload.password_confirmation}\n            errorMessage={errors.password_confirmation}\n            onChange={(e, v) => setPayload(p => ({...p, password_confirmation: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n        </Stack>\n      </form>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ScreenLayout } from \"./layout\";\nimport { TextFieldStyles, Text, TextField, Stack, DatePicker, DatePickerStyles, Dropdown, DropdownStyles, Label, LabelStyles } from \"../styles\";\nimport { useNavigation, useAppState, useWithLoading } from \"../hook\";\nimport moment from \"moment\";\n\nexport const RegisterDetailScreen: React.FunctionComponent = () => {\n  // state\n  const [payload, setPayload] = useState({\n    phone_number: \"\",\n    birthdate: \"\",\n    gender: \"\",\n  });\n\n  const [state, dispatch] = useAppState();\n  const phoneNumberIsRequired = state.metadata.mandatoryScopes.includes(\"phone\");\n\n  // set payload if claims already saved\n  useEffect(() => {\n    const stored = state.session.register;\n\n    if (stored.scope && stored.scope.includes(\"birthdate\") && stored.scope.includes(\"gender\")) {\n      const { phone_number, birthdate, gender } = stored.claims;\n      setPayload({\n        phone_number,\n        birthdate,\n        gender,\n      });\n    }\n  }, []);\n\n\n  // handlers\n  const { nav } = useNavigation();\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n\n  const handlePayloadSubmit = withLoading(async () => {\n    const stored = state.session.register;\n    const { phone_number, birthdate, gender } = payload;\n\n    return dispatch(\"register.validate\", {\n      claims: {\n        ...stored.claims,\n        phone_number: phone_number ? `${state.metadata.locale.country}|${phone_number}` : undefined,\n        birthdate,\n        gender,\n      },\n      credentials: stored.credentials,\n      scope: [\"email\", \"profile\", \"birthdate\", \"gender\"].concat((phoneNumberIsRequired || phone_number) ? \"phone\" : []),\n    })\n      .then(newState => {\n        if (payload.phone_number) {\n          return dispatch(\"verify_phone.send\", {\n            phone_number: newState.session.register.claims.phone_number,\n            register: true,\n          })\n            .then(() => {\n              nav.navigate(\"verify_phone\", {\n                screen: \"verify_phone.verify\",\n                params: {},\n              });\n            });\n        } else {\n          nav.navigate(\"register\", {\n            screen: \"register.end\",\n          });\n        }\n      })\n      .catch((err: any) => setErrors(err));\n  }, [payload]);\n\n  const handleCancel = withLoading(() => nav.navigate(\"register\", {\n    screen: \"register.index\",\n    params: {},\n  }), [nav]);\n\n  // render\n  const storedClaims = state.session.register.claims;\n  return (\n    <ScreenLayout\n      title={\"Sign up\"}\n      subtitle={storedClaims.email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handlePayloadSubmit,\n          loading,\n          tabIndex: 64,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 65,\n        },\n      ]}\n      error={errors.global}\n    >\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handlePayloadSubmit();\n      }}>\n        <Stack tokens={{childrenGap: 15}}>\n          <Text>Please enter the mobile phone number to find the your account for the case of lost.</Text>\n          <TextField\n            label={`Phone${phoneNumberIsRequired ? \"\" : \" (optional)\"}`}\n            type=\"text\"\n            inputMode=\"tel\"\n            placeholder=\"Enter your mobile phone number\"\n            autoFocus\n            tabIndex={61}\n            value={payload.phone_number}\n            errorMessage={errors.phone_number}\n            onChange={(e, v) => setPayload(p => ({...p, phone_number: v!}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            styles={TextFieldStyles.bold}\n          />\n\n          <DatePicker\n            label=\"Birthdate\"\n            placeholder=\"Select your birthdate\"\n            tabIndex={62}\n            allowTextInput\n            value={payload.birthdate ? moment(payload.birthdate, \"YYYY-MM-DD\").toDate() : undefined}\n            onSelectDate={(date) => date && setPayload(p => ({...p, birthdate: moment(date).format(\"YYYY-MM-DD\")}))}\n            onKeyUp={e => e.key === \"Enter\" && handlePayloadSubmit()}\n            formatDate={date => date ? moment(date).format(\"YYYY-MM-DD\") : \"\"}\n            initialPickerDate={moment().subtract(20, \"y\").toDate()}\n            highlightCurrentMonth\n            highlightSelectedMonth\n            showGoToToday={false}\n            parseDateFromString={str => {\n              const d = moment(str, \"YYYY-MM-DD\");\n              return d.isValid() ? d.toDate() : null;\n            }}\n            styles={DatePickerStyles.bold as any}\n          />\n          {errors.birthdate ? <Label styles={LabelStyles.fieldErrorMessage}>{errors.birthdate}</Label> : null}\n\n          <Dropdown\n            label=\"Gender\"\n            selectedKey={payload.gender || undefined}\n            onChange={(e, v) => v && setPayload(p => ({...p, gender: v.key as any}))}\n            placeholder=\"Select your gender\"\n            tabIndex={63}\n            options={[\n              {key: \"male\", text: \"Male\"},\n              {key: \"female\", text: \"Female\"},\n              {key: \"other\", text: \"Other\"},\n            ]}\n            errorMessage={errors.gender}\n            styles={DropdownStyles.bold}\n          />\n        </Stack>\n      </form>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const RegisterEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { email = \"\" } = route.params;\n\n  // handlers\n  const handleContinue = withLoading(() => {\n    // ... login\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    })\n  });\n\n  // render\n  return (\n    <ScreenLayout\n      title={\"Signed up\"}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleContinue,\n          loading,\n          autoFocus: true,\n          tabIndex: 1,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>Congratulations! The account has been registered. This email account can be used to sign in to multiple services. So don't forget it please. <span role=\"img\" aria-label=\"smile\">🙂</span></Text>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useNavigation, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_verify.svg\";\n\nexport const VerifyPhoneIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { phoneNumber = \"\", callback = \"\" } = route.params;\n\n  // handlers\n  const handleSend = withLoading(() => {\n    // TODO: ..\n    nav.navigate(\"verify_phone\", {\n      screen: \"verify_phone.verify\",\n      params: { phoneNumber, ttl: 500, callback },\n    });\n  }, [nav, phoneNumber, callback]);\n\n  const handleCancel = withLoading(() => {\n    callback === \"register\" ? nav.navigate(\"register\", {\n      screen: \"register.detail\",\n      params: {},\n    }) : nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    });\n  }, [nav, callback]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify phone number`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        A text message with a verification code will be sent to verify the phone number.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useNavigation, useAppState, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyPhoneVerifyScreen: React.FunctionComponent = () => {\n  // states\n  const [ code, setCode ] = useState(\"\");\n  const { nav, route } = useNavigation();\n  const { phoneNumber = \"\", ttl = 0, callback = \"\" } = route.params;\n  const [remainingSeconds, setRemainingSeconds] = useState(ttl as number);\n  const [state, dispatch] = useAppState();\n\n  useEffect(() => {\n    const timer = setInterval(() => setRemainingSeconds(s => Math.max(0, s - 1)), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // handlers\n  const { loading, errors, setErrors, withLoading } = useWithLoading();\n  const handleVerify = withLoading(() => {\n    if (callback === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.end\",\n        params: {\n          email: \"tod@do.com\",\n        },\n      });\n    } else {\n      nav.navigate(\"verify_phone\", {\n        screen: \"verify_phone.end\",\n        params: {\n          phoneNumber,\n        },\n      });\n    }\n  }, [nav, phoneNumber, callback]);\n  const handleResend = withLoading(() => {\n    setRemainingSeconds(500);\n    setCode(\"\");\n  });\n  const handleCancel = withLoading(() => {\n    if (state.name === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.detail\",\n        params: {},\n      });\n    } else if (state.name === \"login\" || state.name === \"consent\") {\n      nav.navigate(\"login\", {\n        screen: \"login.index\",\n        params: {},\n      });\n    }\n  }, []);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify phone number`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Continue\",\n          onClick: handleVerify,\n          loading,\n          tabIndex: 22,\n        },\n        {\n          text: \"Resend\",\n          onClick: handleResend,\n          loading,\n          tabIndex: 23,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          hidden: state.name === \"verify_phone\",\n          loading,\n          tabIndex: 24,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Enter the received 6-digit verification code.\n      </Text>\n      <TextField\n        label=\"Verification code\"\n        type=\"tel\"\n        inputMode=\"tel\"\n        placeholder=\"Enter the verification code\"\n        autoFocus\n        tabIndex={21}\n        value={code}\n        errorMessage={errors.code}\n        description={`${(Math.floor(remainingSeconds / 60)).toString().padStart(2, \"0\")}:${(remainingSeconds % 60).toString().padStart(2, \"0\")}`}\n        onChange={(e, v) => setCode(v || \"\")}\n        onKeyUp={e => e.key === \"Enter\" && handleVerify()}\n        styles={TextFieldStyles.bold}\n      />\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyPhoneEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { phoneNumber = \"\" } = route.params;\n\n  // handlers\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {},\n    })\n  );\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Phone number verified`}\n      subtitle={phoneNumber}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account phone number has been verified successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React  from \"react\";\nimport { Text, Image } from \"../styles\";\nimport { useNavigation, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\nimport svg from \"../image/screen_verify.svg\";\n\nexport const VerifyEmailIndexScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { email = \"\", callback = \"\" } = route.params;\n\n  // handlers\n  const handleSend = withLoading(() => {\n    // TODO: ..\n    nav.navigate(\"verify_email\", {\n      screen: \"verify_email.verify\",\n      params: { email, ttl: 1800, callback },\n    });\n  }, [nav, email, callback]);\n\n  const handleCancel = withLoading(() => {\n    callback === \"register\" ? nav.navigate(\"register\", {\n      screen: \"register.detail\",\n      params: {},\n    }) : nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    });\n  }, [nav, callback, email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify email`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Send\",\n          onClick: handleSend,\n          loading,\n          tabIndex: 1,\n        },\n        {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          loading,\n          tabIndex: 2,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with a verification link will be sent to verify the email address.\n      </Text>\n      <Image src={svg} styles={{root: {minHeight: \"270px\"}, image: {width: \"100%\"}}}/>\n    </ScreenLayout>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Text, TextField, TextFieldStyles } from \"../styles\";\nimport { useNavigation, useWithLoading } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyEmailVerifyScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { nav, route } = useNavigation();\n  const { email = \"\", ttl = 0, callback = \"\" } = route.params;\n\n  // handlers\n  const handleDone = withLoading(() => {\n    if (callback === \"register\") {\n      nav.navigate(\"register\", {\n        screen: \"register.detail\",\n        params: {},\n      });\n    } else {\n      nav.navigate(\"login\", {\n        screen: \"login.index\",\n        params: {\n          email,\n        },\n      });\n    }\n  }, [nav, email, callback]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Verify email`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 21,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        An email with the verification link has been sent.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"../styles\";\nimport { useWithLoading, useNavigation } from \"../hook\";\nimport { ScreenLayout } from \"./layout\";\n\nexport const VerifyEmailEndScreen: React.FunctionComponent = () => {\n  // states\n  const {loading, errors, setErrors, withLoading} = useWithLoading();\n  const { route, nav } = useNavigation();\n\n  // props\n  const { email = \"\" } = route.params;\n\n  // handlers\n  const handleDone = withLoading(() =>\n    nav.navigate(\"login\", {\n      screen: \"login.index\",\n      params: {\n        email,\n      },\n    })\n  , [email]);\n\n  // render\n  return (\n    <ScreenLayout\n      title={`Email verified`}\n      subtitle={email}\n      buttons={[\n        {\n          primary: true,\n          text: \"Done\",\n          onClick: handleDone,\n          loading,\n          tabIndex: 31,\n        },\n      ]}\n      error={errors.global}\n    >\n      <Text>\n        Account email address has been verified successfully.\n      </Text>\n    </ScreenLayout>\n  );\n};\n","import React from \"react\";\nimport { ISpinnerProps, Spinner, SpinnerSize, Stack } from \"../styles\";\n\nexport const LoadingScreen: React.FunctionComponent<ISpinnerProps> = ({ size = SpinnerSize.large, label = \"Loading\", ...otherProps }) => {\n  return (\n    <Stack\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      verticalFill\n      children={<Spinner size={size} label={label} {...otherProps} />}\n    />\n  );\n};\n"],"sourceRoot":""}